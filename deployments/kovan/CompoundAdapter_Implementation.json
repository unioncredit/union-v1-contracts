{
  "address": "0xa24996eFdD9E9dB33936D72Ce82bb0232493Aa23",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROLE_ADMIN",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_assetManager",
          "type": "address"
        }
      ],
      "name": "__CompoundAdapter_init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin_",
          "type": "address"
        }
      ],
      "name": "__Controller_init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "assetManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "ceilingMap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "claimTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "floorMap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "getRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "getSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "getSupplyView",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "cTokenAddress",
          "type": "address"
        }
      ],
      "name": "mapTokenToCToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseGuardian",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_assetManager",
          "type": "address"
        }
      ],
      "name": "setAssetManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "ceiling",
          "type": "uint256"
        }
      ],
      "name": "setCeiling",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "floor",
          "type": "uint256"
        }
      ],
      "name": "setFloor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "setGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "supportsToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenToCToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x09bf404c1424ed0c304adae952fb692b07f0a4d1a9fca8c4ea440a84521bab7d",
  "receipt": {
    "to": null,
    "from": "0x7a0C61EdD8b5c0c5C1437AEb571d7DDbF8022Be4",
    "contractAddress": "0xa24996eFdD9E9dB33936D72Ce82bb0232493Aa23",
    "transactionIndex": 6,
    "gasUsed": "2395888",
    "logsBloom": "0x
    "blockHash": "0x879db391f11a4d05fbb790a1b5660d03e56f799d7bfa0187afa3c18095a85dae",
    "transactionHash": "0x09bf404c1424ed0c304adae952fb692b07f0a4d1a9fca8c4ea440a84521bab7d",
    "logs": [],
    "blockNumber": 28432429,
    "cumulativeGasUsed": "4166534",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "1bad13edcd3c88f2ca9238985c18d480",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROLE_ADMIN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_assetManager\",\"type\":\"address\"}],\"name\":\"__CompoundAdapter_init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"name\":\"__Controller_init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assetManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ceilingMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"claimTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"floorMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getSupplyView\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"cTokenAddress\",\"type\":\"address\"}],\"name\":\"mapTokenToCToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseGuardian\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_assetManager\",\"type\":\"address\"}],\"name\":\"setAssetManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ceiling\",\"type\":\"uint256\"}],\"name\":\"setCeiling\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"floor\",\"type\":\"uint256\"}],\"name\":\"setFloor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"setGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"supportsToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenToCToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The implementation of Compound.Finance MoneyMarket that integrates with AssetManager.\",\"kind\":\"dev\",\"methods\":{\"addAdmin(address)\":{\"details\":\"Add a new admin account\",\"params\":{\"account\":\"Account address\"}},\"deposit(address)\":{\"details\":\"Deposits the given amount of tokens in the underlying money market.\"},\"getRate(address)\":{\"details\":\"Returns the interest rate per block for the given token.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getSupply(address)\":{\"details\":\"Returns the supply for the given token, including accrued interest. This function can have side effects.\"},\"getSupplyView(address)\":{\"details\":\"Returns the supply for the given token; it might not include accrued interest. This function *cannot* have side effects.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isAdmin(address)\":{\"details\":\"Check if the address provided is the admin\",\"params\":{\"account\":\"Account address\"}},\"pause()\":{\"details\":\"Called by a pauser to pause, triggers stopped state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceAdmin()\":{\"details\":\"Renouce the admin from the sender's address\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"setGuardian(address)\":{\"details\":\"Set pauseGuardian account\",\"params\":{\"account\":\"Account address\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"supportsToken(address)\":{\"details\":\"Indicates if the adapter supports the token with the given address.\"},\"unpause()\":{\"details\":\"Called by a pauser to unpause, returns to normal state.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"withdrawAll(address,address)\":{\"details\":\"Withdraws all the tokens from the underlying money market and transfers them to `recipient`.\"}},\"stateVariables\":{\"ceilingMap\":{\"details\":\"The maximum amount that should be deposited in money market\",\"params\":{\"tokenAddress\":\"The address of token whose ceiling is being fetched\"}},\"floorMap\":{\"details\":\"The minimum amount that should be deposited in money market before moving to next priority market\",\"params\":{\"tokenAddress\":\"The address of token whose floor is being fetched\"}}},\"title\":\"CompoundAdapter\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/asset/CompoundAdapter.sol\":\"CompoundAdapter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControlUpgradeable.sol\\\";\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../utils/StringsUpgradeable.sol\\\";\\nimport \\\"../utils/introspection/ERC165Upgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it.\\n */\\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControlUpgradeable, ERC165Upgradeable {\\n    function __AccessControl_init() internal initializer {\\n        __Context_init_unchained();\\n        __ERC165_init_unchained();\\n        __AccessControl_init_unchained();\\n    }\\n\\n    function __AccessControl_init_unchained() internal initializer {\\n    }\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with a standardized message including the required role.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     *\\n     * _Available since v4.1._\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role, _msgSender());\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view override returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `account` is missing `role`.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     */\\n    function _checkRole(bytes32 role, address account) internal view {\\n        if (!hasRole(role, account)) {\\n            revert(\\n                string(\\n                    abi.encodePacked(\\n                        \\\"AccessControl: account \\\",\\n                        StringsUpgradeable.toHexString(uint160(account), 20),\\n                        \\\" is missing role \\\",\\n                        StringsUpgradeable.toHexString(uint256(role), 32)\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view override returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual override {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    function _grantRole(bytes32 role, address account) private {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    function _revokeRole(bytes32 role, address account) private {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x29d96f28c0dfcd25ddffef02e56438bde20e1135df9745d7eeb196f08665da6d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControlUpgradeable {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0xb138a22255a0c28ffa169cd269120bbfa27711cefe14b531462b22560cf374fc\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n *\\n * @custom:oz-upgrades-unsafe-allow delegatecall\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable {\\n    function __ERC1967Upgrade_init() internal initializer {\\n        __ERC1967Upgrade_init_unchained();\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal initializer {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            _functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallSecure(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        address oldImplementation = _getImplementation();\\n\\n        // Initial upgrade and setup call\\n        _setImplementation(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            _functionDelegateCall(newImplementation, data);\\n        }\\n\\n        // Perform rollback test if not already in progress\\n        StorageSlotUpgradeable.BooleanSlot storage rollbackTesting = StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT);\\n        if (!rollbackTesting.value) {\\n            // Trigger rollback using upgradeTo from the new implementation\\n            rollbackTesting.value = true;\\n            _functionDelegateCall(\\n                newImplementation,\\n                abi.encodeWithSignature(\\\"upgradeTo(address)\\\", oldImplementation)\\n            );\\n            rollbackTesting.value = false;\\n            // Check rollback was effective\\n            require(oldImplementation == _getImplementation(), \\\"ERC1967Upgrade: upgrade breaks further upgrades\\\");\\n            // Finally reset to the new implementation and log the upgrade\\n            _upgradeTo(newImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Emitted when the beacon is upgraded.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(\\n        address newBeacon,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            _functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function _functionDelegateCall(address target, bytes memory data) private returns (bytes memory) {\\n        require(AddressUpgradeable.isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return AddressUpgradeable.verifyCallResult(success, returndata, \\\"Address: low-level delegate call failed\\\");\\n    }\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xcc3fca7831523600d2cac44ec77ee7e079f70c6910b6d7229ff774eaa5f04cdc\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xce27d2053e9b7a970532947213c84eed0289ada2d9a91c92b7e1e15f3a466c54\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8b2abd85d0ece7e866e100e9d47ca9cbec93c87cf71a8d267b2b93eb81f7d5e9\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1967/ERC1967UpgradeUpgradeable.sol\\\";\\nimport \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract UUPSUpgradeable is Initializable, ERC1967UpgradeUpgradeable {\\n    function __UUPSUpgradeable_init() internal initializer {\\n        __ERC1967Upgrade_init_unchained();\\n        __UUPSUpgradeable_init_unchained();\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal initializer {\\n    }\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function upgradeTo(address newImplementation) external virtual {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallSecure(newImplementation, bytes(\\\"\\\"), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallSecure(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeTo} and {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x57e153cdc803037ecf68a916c6d7eb38d7e4ddbc7ceb6e37c0bee45a5aef9709\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf449ca0a763d4b1b4462cf8706857074492f324020a2b9d099181b5383055ad3\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\nimport \\\"../../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20Upgradeable {\\n    using AddressUpgradeable for address;\\n\\n    function safeTransfer(\\n        IERC20Upgradeable token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20Upgradeable token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc7d7fe7d5ed5068742927e37b400591153dbe8526cd942cfcf5dbb971ba5e8e2\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x946f08c0a132c5877d458d7af7956da60607f20a5c03dd75760708c848aae6b7\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal initializer {\\n        __Context_init_unchained();\\n    }\\n\\n    function __Context_init_unchained() internal initializer {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x062b5a0f7cc6b0528fa350033759f3a15ba42afb57423d7c593753860f2c82e0\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc15eeb888d421aa4dedf46768a0502590d88911cfe5750d3ab9f644a7e5ada95\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary StringsUpgradeable {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0xc7af08df3d3e818ce36f95aa879c13245772fed21b553e6033292ea4edc2a9f3\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165Upgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\\n    function __ERC165_init() internal initializer {\\n        __ERC165_init_unchained();\\n    }\\n\\n    function __ERC165_init_unchained() internal initializer {\\n    }\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\\n    }\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x17c9c5d2d6b56527215ee7b3da6dde66b6f23f1b3d5c66cc436e753ef349a97a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x1c4860acd323e34a67b3e97faab9aaa55fe8e92b1dcf08b5f47f3468d58ce75c\",\"license\":\"MIT\"},\"contracts/Controller.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.4;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\\\";\\n\\n/**\\n * @title Controller component\\n * @dev For easy access to any core components\\n */\\nabstract contract Controller is Initializable, UUPSUpgradeable, AccessControlUpgradeable {\\n    bytes32 public constant ROLE_ADMIN = keccak256(\\\"ROLE_ADMIN\\\");\\n\\n    mapping(address => address) private _admins;\\n    // slither-disable-next-line uninitialized-state\\n    bool private _paused;\\n    // slither-disable-next-line uninitialized-state\\n    address public pauseGuardian;\\n\\n    /**\\n     * @dev Emitted when the pause is triggered by a pauser (`account`).\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by a pauser (`account`).\\n     */\\n    event Unpaused(address account);\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!_paused, \\\"Controller: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     */\\n    modifier whenPaused() {\\n        require(_paused, \\\"Controller: not paused\\\");\\n        _;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(hasRole(ROLE_ADMIN, msg.sender), \\\"Controller: not admin\\\");\\n        _;\\n    }\\n\\n    modifier onlyGuardian() {\\n        require(pauseGuardian == msg.sender, \\\"Controller: caller does not have the guardian role\\\");\\n        _;\\n    }\\n\\n    //When using minimal deploy, do not call initialize directly during deploy, because msg.sender is the proxyFactory address, and you need to call it manually\\n    function __Controller_init(address admin_) public initializer {\\n        require(admin_ != address(0), \\\"Controller: address zero\\\");\\n        _paused = false;\\n        _admins[admin_] = admin_;\\n        __UUPSUpgradeable_init();\\n        _setupRole(ROLE_ADMIN, admin_);\\n        pauseGuardian = admin_;\\n    }\\n\\n    function _authorizeUpgrade(address) internal view override onlyAdmin {}\\n\\n    /**\\n     * @dev Check if the address provided is the admin\\n     * @param account Account address\\n     */\\n    function isAdmin(address account) public view returns (bool) {\\n        return hasRole(ROLE_ADMIN, account);\\n    }\\n\\n    /**\\n     * @dev Add a new admin account\\n     * @param account Account address\\n     */\\n    function addAdmin(address account) public onlyAdmin {\\n        require(account != address(0), \\\"Controller: address zero\\\");\\n        require(_admins[account] == address(0), \\\"Controller: admin already existed\\\");\\n\\n        _admins[account] = account;\\n        _setupRole(ROLE_ADMIN, account);\\n    }\\n\\n    /**\\n     * @dev Set pauseGuardian account\\n     * @param account Account address\\n     */\\n    function setGuardian(address account) public onlyAdmin {\\n        pauseGuardian = account;\\n    }\\n\\n    /**\\n     * @dev Renouce the admin from the sender's address\\n     */\\n    function renounceAdmin() public {\\n        renounceRole(ROLE_ADMIN, msg.sender);\\n        delete _admins[msg.sender];\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Called by a pauser to pause, triggers stopped state.\\n     */\\n    function pause() public onlyGuardian whenNotPaused {\\n        _paused = true;\\n        emit Paused(msg.sender);\\n    }\\n\\n    /**\\n     * @dev Called by a pauser to unpause, returns to normal state.\\n     */\\n    function unpause() public onlyGuardian whenPaused {\\n        _paused = false;\\n        emit Unpaused(msg.sender);\\n    }\\n\\n    uint256[50] private ______gap;\\n}\\n\",\"keccak256\":\"0x8a8364b16824e3321d6e09ad2ce578a4dbf03a9bb91ce9c1ec974bd334c92a8c\",\"license\":\"UNLICENSED\"},\"contracts/asset/CompoundAdapter.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.4;\\npragma abicoder v1;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\\\";\\nimport \\\"../interfaces/IMoneyMarketAdapter.sol\\\";\\nimport \\\"../Controller.sol\\\";\\n\\nabstract contract CToken is IERC20Upgradeable {\\n    function supplyRatePerBlock() external view virtual returns (uint256);\\n\\n    function mint(uint256 mintAmount) external virtual returns (uint256);\\n\\n    function redeemUnderlying(uint256 redeemAmount) external virtual returns (uint256);\\n\\n    function balanceOfUnderlying(address owner) external virtual returns (uint256);\\n\\n    function exchangeRateStored() external view virtual returns (uint256);\\n}\\n\\n/**\\n * @title CompoundAdapter\\n *  @dev The implementation of Compound.Finance MoneyMarket that integrates with AssetManager.\\n */\\ncontract CompoundAdapter is Controller, IMoneyMarketAdapter {\\n    using SafeERC20Upgradeable for IERC20Upgradeable;\\n\\n    mapping(address => address) public tokenToCToken;\\n\\n    address public assetManager;\\n    mapping(address => uint256) public override floorMap;\\n    mapping(address => uint256) public override ceilingMap;\\n\\n    modifier checkTokenSupported(address tokenAddress) {\\n        require(_supportsToken(tokenAddress), \\\"Token not supported\\\");\\n        _;\\n    }\\n\\n    modifier onlyAssetManager() {\\n        require(msg.sender == assetManager, \\\"Only asset manager can call\\\");\\n        _;\\n    }\\n\\n    function __CompoundAdapter_init(address _assetManager) public initializer {\\n        Controller.__Controller_init(msg.sender);\\n        assetManager = _assetManager;\\n    }\\n\\n    function setAssetManager(address _assetManager) external onlyAdmin {\\n        assetManager = _assetManager;\\n    }\\n\\n    function setFloor(address tokenAddress, uint256 floor) external onlyAdmin {\\n        floorMap[tokenAddress] = floor;\\n    }\\n\\n    function setCeiling(address tokenAddress, uint256 ceiling) external onlyAdmin {\\n        ceilingMap[tokenAddress] = ceiling;\\n    }\\n\\n    function mapTokenToCToken(address tokenAddress, address cTokenAddress) external onlyAdmin {\\n        tokenToCToken[tokenAddress] = cTokenAddress;\\n    }\\n\\n    function getRate(address tokenAddress) external view override returns (uint256) {\\n        address cTokenAddress = tokenToCToken[tokenAddress];\\n        CToken cToken = CToken(cTokenAddress);\\n\\n        return cToken.supplyRatePerBlock();\\n    }\\n\\n    function deposit(address tokenAddress) external override checkTokenSupported(tokenAddress) {\\n        // get cToken\\n        IERC20Upgradeable token = IERC20Upgradeable(tokenAddress);\\n        address cTokenAddress = tokenToCToken[tokenAddress];\\n        CToken cToken = CToken(cTokenAddress);\\n        uint256 amount = token.balanceOf(address(this));\\n        // mint cTokens\\n        token.safeApprove(cTokenAddress, 0);\\n        token.safeApprove(cTokenAddress, amount);\\n        uint256 result = cToken.mint(amount);\\n        require(result == 0, \\\"Error minting the cToken\\\");\\n    }\\n\\n    function withdraw(\\n        address tokenAddress,\\n        address recipient,\\n        uint256 tokenAmount\\n    ) external override onlyAssetManager checkTokenSupported(tokenAddress) {\\n        IERC20Upgradeable token = IERC20Upgradeable(tokenAddress);\\n        address cTokenAddress = tokenToCToken[tokenAddress];\\n        CToken cToken = CToken(cTokenAddress);\\n\\n        uint256 result = cToken.redeemUnderlying(tokenAmount);\\n        require(result == 0, \\\"Error redeeming the cToken\\\");\\n        token.safeTransfer(recipient, tokenAmount);\\n    }\\n\\n    function withdrawAll(address tokenAddress, address recipient)\\n        external\\n        override\\n        onlyAssetManager\\n        checkTokenSupported(tokenAddress)\\n    {\\n        IERC20Upgradeable token = IERC20Upgradeable(tokenAddress);\\n        address cTokenAddress = tokenToCToken[tokenAddress];\\n        CToken cToken = CToken(cTokenAddress);\\n\\n        uint256 result = cToken.redeemUnderlying(cToken.balanceOfUnderlying(address(this)));\\n        require(result == 0, \\\"Error redeeming the cToken\\\");\\n        token.safeTransfer(recipient, token.balanceOf(address(this)));\\n    }\\n\\n    function claimTokens(address tokenAddress, address recipient) external override onlyAssetManager {\\n        _claimTokens(tokenAddress, recipient);\\n    }\\n\\n    function getSupply(address tokenAddress) external override returns (uint256) {\\n        address cTokenAddress = tokenToCToken[tokenAddress];\\n        CToken cToken = CToken(cTokenAddress);\\n\\n        // hack for preventing a rounding issue in `redeemUnderlying`\\n        if (cToken.balanceOf(address(this)) <= 10) {\\n            return 0;\\n        }\\n\\n        return cToken.balanceOfUnderlying(address(this));\\n    }\\n\\n    function getSupplyView(address tokenAddress) external view override returns (uint256) {\\n        address cTokenAddress = tokenToCToken[tokenAddress];\\n        CToken cToken = CToken(cTokenAddress);\\n\\n        // hack for preventing a rounding issue in `redeemUnderlying`\\n        if (cToken.balanceOf(address(this)) <= 10) {\\n            return 0;\\n        }\\n\\n        uint256 exchangeRate = cToken.exchangeRateStored();\\n        uint256 balance = cToken.balanceOf(address(this));\\n        return (balance * exchangeRate) / 10**18;\\n    }\\n\\n    function supportsToken(address tokenAddress) external view override returns (bool) {\\n        return _supportsToken(tokenAddress);\\n    }\\n\\n    function _supportsToken(address tokenAddress) internal view returns (bool) {\\n        address cTokenAddress = tokenToCToken[tokenAddress];\\n\\n        return cTokenAddress != address(0);\\n    }\\n\\n    function _claimTokens(address tokenAddress, address recipient) private {\\n        require(recipient != address(0), \\\"Recipient can not be zero\\\");\\n        IERC20Upgradeable token = IERC20Upgradeable(tokenAddress);\\n        uint256 balance = token.balanceOf(address(this));\\n        token.safeTransfer(recipient, balance);\\n    }\\n}\\n\",\"keccak256\":\"0x08d6fbfd840ef4eae25d3c368cc0a9ca910ced15515ad138a4cff5561872b2e0\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IMoneyMarketAdapter.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.4;\\n\\n/**\\n * @title MoneyMarketAdapter Interface\\n *  @dev Working with AssetManager to support external money markets, like Compound etc.\\n */\\ninterface IMoneyMarketAdapter {\\n    /**\\n     * @dev Returns the interest rate per block for the given token.\\n     */\\n    function getRate(address tokenAddress) external view returns (uint256);\\n\\n    /**\\n     * @dev Deposits the given amount of tokens in the underlying money market.\\n     */\\n    function deposit(address tokenAddress) external;\\n\\n    /**\\n     * @dev Withdraws the given amount of tokens from the underlying money market and transfers them to `recipient`.\\n     */\\n    function withdraw(\\n        address tokenAddress,\\n        address recipient,\\n        uint256 amount\\n    ) external;\\n\\n    /**\\n     * @dev Withdraws all the tokens from the underlying money market and transfers them to `recipient`.\\n     */\\n    function withdrawAll(address tokenAddress, address recipient) external;\\n\\n    function claimTokens(address tokenAddress, address recipient) external;\\n\\n    /**\\n     * @dev Returns the supply for the given token, including accrued interest. This function can have side effects.\\n     */\\n    function getSupply(address tokenAddress) external returns (uint256);\\n\\n    /**\\n     * @dev Returns the supply for the given token; it might not include accrued interest. This function *cannot* have side effects.\\n     */\\n    function getSupplyView(address tokenAddress) external view returns (uint256);\\n\\n    /**\\n     * @dev Indicates if the adapter supports the token with the given address.\\n     */\\n    function supportsToken(address tokenAddress) external view returns (bool);\\n\\n    /**\\n     * @dev The minimum amount that should be deposited in money market before moving to next priority market\\n     * @param tokenAddress The address of token whose floor is being fetched\\n     */\\n    function floorMap(address tokenAddress) external view returns (uint256);\\n\\n    /**\\n     * @dev The maximum amount that should be deposited in money market\\n     * @param tokenAddress The address of token whose ceiling is being fetched\\n     */\\n    function ceilingMap(address tokenAddress) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x2e7f523a99e9205160730ae745c7db5bf17808266d6a9a8f8a84f94d187c6e09\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612a62806100206000396000f3fe6080604052600436106101cf5760003560e01c80636c00c7f0116100f8578063a217fddf11610090578063a217fddf146107c4578063b4fe49b0146107d9578063c99c7d931461080c578063d391014b14610845578063d547741f14610867578063d9caed12146108a0578063ec7b6fd8146108e3578063ed8a1e541461091e578063f340fa011461095157600080fd5b80636c00c7f01461062d5780636c461a731461066657806370480275146106995780638456cb59146106cc5780638a0dac4a146106e15780638bad0c0a14610714578063904d32611461072957806391d148541461076a57806394217ad1146107a357600080fd5b8063363f68ce1161016b578063363f68ce146103fc57806336568abe1461043d5780633659cfe61461047657806337cef791146104a95780633f4ba83a146104dc57806343060237146104f15780634f1ef286146105245780635c975abb146105da57806369ffa08a146105f257600080fd5b806301ffc9a7146101d4578063061f76501461021c57806309cae2c81461024f5780631fd433aa1461028c578063248a9ca3146102d157806324a3d6221461030b57806324d7806c1461034c57806325888f0b1461037f5780632f2ff15d146103c3575b600080fd5b3480156101e057600080fd5b50610208600480360360208110156101f757600080fd5b50356001600160e01b031916610984565b604080519115158252519081900360200190f35b34801561022857600080fd5b506102086004803603602081101561023f57600080fd5b50356001600160a01b03166109bb565b34801561025b57600080fd5b5061028a6004803603604081101561027257600080fd5b506001600160a01b03813581169160200135166109c6565b005b34801561029857600080fd5b506102bf600480360360208110156102af57600080fd5b50356001600160a01b0316610c4e565b60408051918252519081900360200190f35b3480156102dd57600080fd5b506102bf600480360360208110156102f457600080fd5b5035600090815260c9602052604090206001015490565b34801561031757600080fd5b5060fc546103309061010090046001600160a01b031681565b604080516001600160a01b039092168252519081900360200190f35b34801561035857600080fd5b506102086004803603602081101561036f57600080fd5b50356001600160a01b0316610d65565b34801561038b57600080fd5b50610330600480360360208110156103a257600080fd5b5061012f6020526001600160a01b0390358116600090815260409020541681565b3480156103cf57600080fd5b5061028a600480360360408110156103e657600080fd5b50803590602001356001600160a01b0316610d7f565b34801561040857600080fd5b506102bf6004803603602081101561041f57600080fd5b50610132602052356001600160a01b03166000908152604090205481565b34801561044957600080fd5b5061028a6004803603604081101561046057600080fd5b50803590602001356001600160a01b0316610daa565b34801561048257600080fd5b5061028a6004803603602081101561049957600080fd5b50356001600160a01b0316610e2d565b3480156104b557600080fd5b506102bf600480360360208110156104cc57600080fd5b50356001600160a01b0316610e54565b3480156104e857600080fd5b5061028a610ebd565b3480156104fd57600080fd5b5061028a6004803603602081101561051457600080fd5b50356001600160a01b0316610f7b565b61028a6004803603604081101561053a57600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561056557600080fd5b82018360208201111561057757600080fd5b8035906020019184600183028401116401000000008311171561059957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610fd2945050505050565b3480156105e657600080fd5b5060fc5460ff16610208565b3480156105fe57600080fd5b5061028a6004803603604081101561061557600080fd5b506001600160a01b0381358116916020013516610fe7565b34801561063957600080fd5b5061028a6004803603604081101561065057600080fd5b506001600160a01b03813516906020013561103f565b34801561067257600080fd5b5061028a6004803603602081101561068957600080fd5b50356001600160a01b0316611090565b3480156106a557600080fd5b5061028a600480360360208110156106bc57600080fd5b50356001600160a01b0316611195565b3480156106d857600080fd5b5061028a6112a2565b3480156106ed57600080fd5b5061028a6004803603602081101561070457600080fd5b50356001600160a01b0316611356565b34801561072057600080fd5b5061028a6113b2565b34801561073557600080fd5b506102bf6004803603602081101561074c57600080fd5b50610131602052356001600160a01b03166000908152604090205481565b34801561077657600080fd5b506102086004803603604081101561078d57600080fd5b50803590602001356001600160a01b03166113e9565b3480156107af57600080fd5b5061013054610330906001600160a01b031681565b3480156107d057600080fd5b506102bf600081565b3480156107e557600080fd5b5061028a600480360360208110156107fc57600080fd5b50356001600160a01b0316611414565b34801561081857600080fd5b5061028a6004803603604081101561082f57600080fd5b506001600160a01b0381351690602001356114a5565b34801561085157600080fd5b506102bf6000805160206129e683398151915281565b34801561087357600080fd5b5061028a6004803603604081101561088a57600080fd5b50803590602001356001600160a01b03166114f6565b3480156108ac57600080fd5b5061028a600480360360608110156108c357600080fd5b506001600160a01b0381358116916020810135909116906040013561151c565b3480156108ef57600080fd5b5061028a6004803603604081101561090657600080fd5b506001600160a01b03813581169160200135166116bb565b34801561092a57600080fd5b506102bf6004803603602081101561094157600080fd5b50356001600160a01b031661171e565b34801561095d57600080fd5b5061028a6004803603602081101561097457600080fd5b50356001600160a01b03166118c1565b60006001600160e01b03198216637965db0b60e01b14806109b557506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006109b582611a8c565b610130546001600160a01b03163314610a14576040805162461bcd60e51b815260206004820152601b60248201526000805160206129c6833981519152604482015290519081900360640190fd5b81610a1e81611a8c565b610a65576040805162461bcd60e51b8152602060048201526013602482015272151bdad95b881b9bdd081cdd5c1c1bdc9d1959606a1b604482015290519081900360640190fd5b6001600160a01b03808416600090815261012f60209081526040808320548151633af9e66960e01b815230600482015291518895919091169384939092849263852a12e3928492633af9e669926024808301939282900301818987803b158015610ace57600080fd5b505af1158015610ae2573d6000803e3d6000fd5b505050506040513d6020811015610af857600080fd5b5051604080516001600160e01b031960e085901b16815260048101929092525160248083019260209291908290030181600087803b158015610b3957600080fd5b505af1158015610b4d573d6000803e3d6000fd5b505050506040513d6020811015610b6357600080fd5b505190508015610bb7576040805162461bcd60e51b815260206004820152601a60248201527922b93937b9103932b232b2b6b4b733903a34329031aa37b5b2b760311b604482015290519081900360640190fd5b610c4586856001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610c0857600080fd5b505afa158015610c1c573d6000803e3d6000fd5b505050506040513d6020811015610c3257600080fd5b50516001600160a01b0387169190611aad565b50505050505050565b6001600160a01b03808216600090815261012f602090815260408083205481516370a0823160e01b81523060048201529151939416928392600a9284926370a0823192602480840193919291829003018186803b158015610cae57600080fd5b505afa158015610cc2573d6000803e3d6000fd5b505050506040513d6020811015610cd857600080fd5b505111610ce9575060009392505050565b60408051633af9e66960e01b815230600482015290516001600160a01b03831691633af9e6699160248083019260209291908290030181600087803b158015610d3157600080fd5b505af1158015610d45573d6000803e3d6000fd5b505050506040513d6020811015610d5b57600080fd5b5051949350505050565b60006109b56000805160206129e6833981519152836113e9565b600082815260c96020526040902060010154610d9b8133611b10565b610da58383611b74565b505050565b6001600160a01b0381163314610e1f5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b610e298282611bfa565b5050565b610e3681611c61565b610e5181604051806020016040528060008152506000611c95565b50565b6001600160a01b03808216600090815261012f60209081526040808320548151630ae9d70b60e41b81529151939416928392839263ae9d70b09260048083019392829003018186803b158015610ea957600080fd5b505afa158015610d45573d6000803e3d6000fd5b60fc5461010090046001600160a01b03163314610eec5760405162461bcd60e51b8152600401610e1690612843565b60fc5460ff16610f375760405162461bcd60e51b815260206004820152601660248201527510dbdb9d1c9bdb1b195c8e881b9bdd081c185d5cd95960521b6044820152606401610e16565b60fc805460ff191690556040517f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90610f719033906127cd565b60405180910390a1565b610f936000805160206129e6833981519152336113e9565b610faf5760405162461bcd60e51b8152600401610e1690612814565b61013080546001600160a01b0319166001600160a01b0392909216919091179055565b610fdb82611c61565b610e2982826001611c95565b610130546001600160a01b03163314611035576040805162461bcd60e51b815260206004820152601b60248201526000805160206129c6833981519152604482015290519081900360640190fd5b610e298282611ddc565b6110576000805160206129e6833981519152336113e9565b6110735760405162461bcd60e51b8152600401610e1690612814565b6001600160a01b0390911660009081526101326020526040902055565b600054610100900460ff16806110a9575060005460ff16155b6110c55760405162461bcd60e51b8152600401610e16906128c7565b600054610100900460ff161580156110e7576000805461ffff19166101011790555b6001600160a01b03821661110d5760405162461bcd60e51b8152600401610e1690612895565b60fc805460ff191690556001600160a01b038216600081815260fb6020526040902080546001600160a01b0319169091179055611148611ec6565b6111606000805160206129e683398151915283611f41565b60fc8054610100600160a81b0319166101006001600160a01b038516021790558015610e29576000805461ff00191690555050565b6111ad6000805160206129e6833981519152336113e9565b6111c95760405162461bcd60e51b8152600401610e1690612814565b6001600160a01b0381166111ef5760405162461bcd60e51b8152600401610e1690612895565b6001600160a01b03818116600090815260fb602052604090205416156112615760405162461bcd60e51b815260206004820152602160248201527f436f6e74726f6c6c65723a2061646d696e20616c7265616479206578697374656044820152601960fa1b6064820152608401610e16565b6001600160a01b038116600081815260fb6020526040902080546001600160a01b0319169091179055610e516000805160206129e683398151915282611f41565b60fc5461010090046001600160a01b031633146112d15760405162461bcd60e51b8152600401610e1690612843565b60fc5460ff16156113195760405162461bcd60e51b815260206004820152601260248201527110dbdb9d1c9bdb1b195c8e881c185d5cd95960721b6044820152606401610e16565b60fc805460ff191660011790556040517f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890610f719033906127cd565b61136e6000805160206129e6833981519152336113e9565b61138a5760405162461bcd60e51b8152600401610e1690612814565b60fc80546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6113ca6000805160206129e683398151915233610daa565b33600090815260fb6020526040902080546001600160a01b0319169055565b600091825260c9602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600054610100900460ff168061142d575060005460ff16155b6114495760405162461bcd60e51b8152600401610e16906128c7565b600054610100900460ff1615801561146b576000805461ffff19166101011790555b61147433611090565b61013080546001600160a01b0319166001600160a01b0384161790558015610e29576000805461ff00191690555050565b6114bd6000805160206129e6833981519152336113e9565b6114d95760405162461bcd60e51b8152600401610e1690612814565b6001600160a01b0390911660009081526101316020526040902055565b600082815260c960205260409020600101546115128133611b10565b610da58383611bfa565b610130546001600160a01b0316331461156a576040805162461bcd60e51b815260206004820152601b60248201526000805160206129c6833981519152604482015290519081900360640190fd5b8261157481611a8c565b6115bb576040805162461bcd60e51b8152602060048201526013602482015272151bdad95b881b9bdd081cdd5c1c1bdc9d1959606a1b604482015290519081900360640190fd5b6001600160a01b03808516600090815261012f6020908152604080832054815163852a12e360e01b81526004810188905291518995919091169384939092849263852a12e39260248084019391929182900301818787803b15801561161f57600080fd5b505af1158015611633573d6000803e3d6000fd5b505050506040513d602081101561164957600080fd5b50519050801561169d576040805162461bcd60e51b815260206004820152601a60248201527922b93937b9103932b232b2b6b4b733903a34329031aa37b5b2b760311b604482015290519081900360640190fd5b6116b16001600160a01b0385168888611aad565b5050505050505050565b6116d36000805160206129e6833981519152336113e9565b6116ef5760405162461bcd60e51b8152600401610e1690612814565b6001600160a01b03918216600090815261012f6020526040902080546001600160a01b03191691909216179055565b6001600160a01b03808216600090815261012f602090815260408083205481516370a0823160e01b81523060048201529151939416928392600a9284926370a0823192602480840193919291829003018186803b15801561177e57600080fd5b505afa158015611792573d6000803e3d6000fd5b505050506040513d60208110156117a857600080fd5b5051116117b9575060009392505050565b6000816001600160a01b031663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b1580156117f457600080fd5b505afa158015611808573d6000803e3d6000fd5b505050506040513d602081101561181e57600080fd5b5051604080516370a0823160e01b815230600482015290519192506000916001600160a01b038516916370a08231916024808301926020929190829003018186803b15801561186c57600080fd5b505afa158015611880573d6000803e3d6000fd5b505050506040513d602081101561189657600080fd5b50519050670de0b6b3a76400006118ad838361294d565b6118b7919061292d565b9695505050505050565b806118cb81611a8c565b611912576040805162461bcd60e51b8152602060048201526013602482015272151bdad95b881b9bdd081cdd5c1c1bdc9d1959606a1b604482015290519081900360640190fd5b6001600160a01b03808316600081815261012f602090815260408083205481516370a0823160e01b815230600482015291518896919091169485949390926370a082319260248083019392829003018186803b15801561197157600080fd5b505afa158015611985573d6000803e3d6000fd5b505050506040513d602081101561199b57600080fd5b505190506119b46001600160a01b038516846000611f4b565b6119c86001600160a01b0385168483611f4b565b6000826001600160a01b031663a0712d68836040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b158015611a1057600080fd5b505af1158015611a24573d6000803e3d6000fd5b505050506040513d6020811015611a3a57600080fd5b505190508015610c45576040805162461bcd60e51b815260206004820152601860248201527722b93937b91036b4b73a34b733903a34329031aa37b5b2b760411b604482015290519081900360640190fd5b6001600160a01b03908116600090815261012f602052604090205416151590565b6040516001600160a01b038316602482015260448101829052610da590849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261206f565b611b1a82826113e9565b610e2957611b32816001600160a01b03166014612141565b611b3d836020612141565b604051602001611b4e92919061275e565b60408051601f198184030181529082905262461bcd60e51b8252610e16916004016127e1565b611b7e82826113e9565b610e2957600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff19166001179055611bb63390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b611c0482826113e9565b15610e2957600082815260c9602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b611c796000805160206129e6833981519152336113e9565b610e515760405162461bcd60e51b8152600401610e1690612814565b6000611c9f61232a565b9050611caa84612358565b600083511180611cb75750815b15611cc857611cc684846123fd565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff16611dd557805460ff19166001178155604051611d43908690611d149085906024016127cd565b60408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b1790526123fd565b50805460ff19168155611d5461232a565b6001600160a01b0316826001600160a01b031614611dcc5760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b6064820152608401610e16565b611dd5856124e8565b5050505050565b6001600160a01b038116611e33576040805162461bcd60e51b8152602060048201526019602482015278526563697069656e742063616e206e6f74206265207a65726f60381b604482015290519081900360640190fd5b604080516370a0823160e01b8152306004820152905183916000916001600160a01b038416916370a08231916024808301926020929190829003018186803b158015611e7e57600080fd5b505afa158015611e92573d6000803e3d6000fd5b505050506040513d6020811015611ea857600080fd5b50519050611ec06001600160a01b0383168483611aad565b50505050565b600054610100900460ff1680611edf575060005460ff16155b611efb5760405162461bcd60e51b8152600401610e16906128c7565b600054610100900460ff16158015611f1d576000805461ffff19166101011790555b611f25612528565b611f2d612528565b8015610e51576000805461ff001916905550565b610e298282611b74565b801580611fd45750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b158015611f9a57600080fd5b505afa158015611fae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fd2919061272a565b155b61203f5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610e16565b6040516001600160a01b038316602482015260448101829052610da590849063095ea7b360e01b90606401611ad9565b60006120c4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166125929092919063ffffffff16565b805190915015610da557808060200190518101906120e2919061270a565b610da55760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610e16565b6060600061215083600261294d565b61215b906002612915565b67ffffffffffffffff81111561218157634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156121ab576020820181803683370190505b509050600360fc1b816000815181106121d457634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061221157634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600061223584600261294d565b612240906001612915565b90505b60018111156122d4576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061228257634e487b7160e01b600052603260045260246000fd5b1a60f81b8282815181106122a657634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c936122cd81612998565b9050612243565b5083156123235760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610e16565b9392505050565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b803b6123bc5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610e16565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6060823b61245c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610e16565b600080846001600160a01b0316846040516124779190612742565b600060405180830381855af49150503d80600081146124b2576040519150601f19603f3d011682016040523d82523d6000602084013e6124b7565b606091505b50915091506124df8282604051806060016040528060278152602001612a06602791396125a9565b95945050505050565b6124f181612358565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b600054610100900460ff1680612541575060005460ff16155b61255d5760405162461bcd60e51b8152600401610e16906128c7565b600054610100900460ff16158015611f2d576000805461ffff19166101011790558015610e51576000805461ff001916905550565b60606125a184846000856125e2565b949350505050565b606083156125b8575081612323565b8251156125c85782518084602001fd5b8160405162461bcd60e51b8152600401610e1691906127e1565b6060824710156126435760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610e16565b843b6126915760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610e16565b600080866001600160a01b031685876040516126ad9190612742565b60006040518083038185875af1925050503d80600081146126ea576040519150601f19603f3d011682016040523d82523d6000602084013e6126ef565b606091505b50915091506126ff8282866125a9565b979650505050505050565b60006020828403121561271b578081fd5b81518015158114612323578182fd5b60006020828403121561273b578081fd5b5051919050565b6000825161275481846020870161296c565b9190910192915050565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b81526000835161279081601785016020880161296c565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516127c181602884016020880161296c565b01602801949350505050565b6001600160a01b0391909116815260200190565b602081526000825180602084015261280081604085016020870161296c565b601f01601f19169190910160400192915050565b60208082526015908201527421b7b73a3937b63632b91d103737ba1030b236b4b760591b604082015260600190565b60208082526032908201527f436f6e74726f6c6c65723a2063616c6c657220646f6573206e6f7420686176656040820152712074686520677561726469616e20726f6c6560701b606082015260800190565b602080825260189082015277436f6e74726f6c6c65723a2061646472657373207a65726f60401b604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60008219821115612928576129286129af565b500190565b60008261294857634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615612967576129676129af565b500290565b60005b8381101561298757818101518382015260200161296f565b83811115611ec05750506000910152565b6000816129a7576129a76129af565b506000190190565b634e487b7160e01b600052601160045260246000fdfe4f6e6c79206173736574206d616e616765722063616e2063616c6c00000000002172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca025096416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220beef4290dbefa3d39d51b677b50b0a2afaf5476d0c08ee5747041fb1423d4c7b64736f6c63430008040033",
  "deployedBytecode": "0x6080604052600436106101cf5760003560e01c80636c00c7f0116100f8578063a217fddf11610090578063a217fddf146107c4578063b4fe49b0146107d9578063c99c7d931461080c578063d391014b14610845578063d547741f14610867578063d9caed12146108a0578063ec7b6fd8146108e3578063ed8a1e541461091e578063f340fa011461095157600080fd5b80636c00c7f01461062d5780636c461a731461066657806370480275146106995780638456cb59146106cc5780638a0dac4a146106e15780638bad0c0a14610714578063904d32611461072957806391d148541461076a57806394217ad1146107a357600080fd5b8063363f68ce1161016b578063363f68ce146103fc57806336568abe1461043d5780633659cfe61461047657806337cef791146104a95780633f4ba83a146104dc57806343060237146104f15780634f1ef286146105245780635c975abb146105da57806369ffa08a146105f257600080fd5b806301ffc9a7146101d4578063061f76501461021c57806309cae2c81461024f5780631fd433aa1461028c578063248a9ca3146102d157806324a3d6221461030b57806324d7806c1461034c57806325888f0b1461037f5780632f2ff15d146103c3575b600080fd5b3480156101e057600080fd5b50610208600480360360208110156101f757600080fd5b50356001600160e01b031916610984565b604080519115158252519081900360200190f35b34801561022857600080fd5b506102086004803603602081101561023f57600080fd5b50356001600160a01b03166109bb565b34801561025b57600080fd5b5061028a6004803603604081101561027257600080fd5b506001600160a01b03813581169160200135166109c6565b005b34801561029857600080fd5b506102bf600480360360208110156102af57600080fd5b50356001600160a01b0316610c4e565b60408051918252519081900360200190f35b3480156102dd57600080fd5b506102bf600480360360208110156102f457600080fd5b5035600090815260c9602052604090206001015490565b34801561031757600080fd5b5060fc546103309061010090046001600160a01b031681565b604080516001600160a01b039092168252519081900360200190f35b34801561035857600080fd5b506102086004803603602081101561036f57600080fd5b50356001600160a01b0316610d65565b34801561038b57600080fd5b50610330600480360360208110156103a257600080fd5b5061012f6020526001600160a01b0390358116600090815260409020541681565b3480156103cf57600080fd5b5061028a600480360360408110156103e657600080fd5b50803590602001356001600160a01b0316610d7f565b34801561040857600080fd5b506102bf6004803603602081101561041f57600080fd5b50610132602052356001600160a01b03166000908152604090205481565b34801561044957600080fd5b5061028a6004803603604081101561046057600080fd5b50803590602001356001600160a01b0316610daa565b34801561048257600080fd5b5061028a6004803603602081101561049957600080fd5b50356001600160a01b0316610e2d565b3480156104b557600080fd5b506102bf600480360360208110156104cc57600080fd5b50356001600160a01b0316610e54565b3480156104e857600080fd5b5061028a610ebd565b3480156104fd57600080fd5b5061028a6004803603602081101561051457600080fd5b50356001600160a01b0316610f7b565b61028a6004803603604081101561053a57600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561056557600080fd5b82018360208201111561057757600080fd5b8035906020019184600183028401116401000000008311171561059957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610fd2945050505050565b3480156105e657600080fd5b5060fc5460ff16610208565b3480156105fe57600080fd5b5061028a6004803603604081101561061557600080fd5b506001600160a01b0381358116916020013516610fe7565b34801561063957600080fd5b5061028a6004803603604081101561065057600080fd5b506001600160a01b03813516906020013561103f565b34801561067257600080fd5b5061028a6004803603602081101561068957600080fd5b50356001600160a01b0316611090565b3480156106a557600080fd5b5061028a600480360360208110156106bc57600080fd5b50356001600160a01b0316611195565b3480156106d857600080fd5b5061028a6112a2565b3480156106ed57600080fd5b5061028a6004803603602081101561070457600080fd5b50356001600160a01b0316611356565b34801561072057600080fd5b5061028a6113b2565b34801561073557600080fd5b506102bf6004803603602081101561074c57600080fd5b50610131602052356001600160a01b03166000908152604090205481565b34801561077657600080fd5b506102086004803603604081101561078d57600080fd5b50803590602001356001600160a01b03166113e9565b3480156107af57600080fd5b5061013054610330906001600160a01b031681565b3480156107d057600080fd5b506102bf600081565b3480156107e557600080fd5b5061028a600480360360208110156107fc57600080fd5b50356001600160a01b0316611414565b34801561081857600080fd5b5061028a6004803603604081101561082f57600080fd5b506001600160a01b0381351690602001356114a5565b34801561085157600080fd5b506102bf6000805160206129e683398151915281565b34801561087357600080fd5b5061028a6004803603604081101561088a57600080fd5b50803590602001356001600160a01b03166114f6565b3480156108ac57600080fd5b5061028a600480360360608110156108c357600080fd5b506001600160a01b0381358116916020810135909116906040013561151c565b3480156108ef57600080fd5b5061028a6004803603604081101561090657600080fd5b506001600160a01b03813581169160200135166116bb565b34801561092a57600080fd5b506102bf6004803603602081101561094157600080fd5b50356001600160a01b031661171e565b34801561095d57600080fd5b5061028a6004803603602081101561097457600080fd5b50356001600160a01b03166118c1565b60006001600160e01b03198216637965db0b60e01b14806109b557506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006109b582611a8c565b610130546001600160a01b03163314610a14576040805162461bcd60e51b815260206004820152601b60248201526000805160206129c6833981519152604482015290519081900360640190fd5b81610a1e81611a8c565b610a65576040805162461bcd60e51b8152602060048201526013602482015272151bdad95b881b9bdd081cdd5c1c1bdc9d1959606a1b604482015290519081900360640190fd5b6001600160a01b03808416600090815261012f60209081526040808320548151633af9e66960e01b815230600482015291518895919091169384939092849263852a12e3928492633af9e669926024808301939282900301818987803b158015610ace57600080fd5b505af1158015610ae2573d6000803e3d6000fd5b505050506040513d6020811015610af857600080fd5b5051604080516001600160e01b031960e085901b16815260048101929092525160248083019260209291908290030181600087803b158015610b3957600080fd5b505af1158015610b4d573d6000803e3d6000fd5b505050506040513d6020811015610b6357600080fd5b505190508015610bb7576040805162461bcd60e51b815260206004820152601a60248201527922b93937b9103932b232b2b6b4b733903a34329031aa37b5b2b760311b604482015290519081900360640190fd5b610c4586856001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610c0857600080fd5b505afa158015610c1c573d6000803e3d6000fd5b505050506040513d6020811015610c3257600080fd5b50516001600160a01b0387169190611aad565b50505050505050565b6001600160a01b03808216600090815261012f602090815260408083205481516370a0823160e01b81523060048201529151939416928392600a9284926370a0823192602480840193919291829003018186803b158015610cae57600080fd5b505afa158015610cc2573d6000803e3d6000fd5b505050506040513d6020811015610cd857600080fd5b505111610ce9575060009392505050565b60408051633af9e66960e01b815230600482015290516001600160a01b03831691633af9e6699160248083019260209291908290030181600087803b158015610d3157600080fd5b505af1158015610d45573d6000803e3d6000fd5b505050506040513d6020811015610d5b57600080fd5b5051949350505050565b60006109b56000805160206129e6833981519152836113e9565b600082815260c96020526040902060010154610d9b8133611b10565b610da58383611b74565b505050565b6001600160a01b0381163314610e1f5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b610e298282611bfa565b5050565b610e3681611c61565b610e5181604051806020016040528060008152506000611c95565b50565b6001600160a01b03808216600090815261012f60209081526040808320548151630ae9d70b60e41b81529151939416928392839263ae9d70b09260048083019392829003018186803b158015610ea957600080fd5b505afa158015610d45573d6000803e3d6000fd5b60fc5461010090046001600160a01b03163314610eec5760405162461bcd60e51b8152600401610e1690612843565b60fc5460ff16610f375760405162461bcd60e51b815260206004820152601660248201527510dbdb9d1c9bdb1b195c8e881b9bdd081c185d5cd95960521b6044820152606401610e16565b60fc805460ff191690556040517f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90610f719033906127cd565b60405180910390a1565b610f936000805160206129e6833981519152336113e9565b610faf5760405162461bcd60e51b8152600401610e1690612814565b61013080546001600160a01b0319166001600160a01b0392909216919091179055565b610fdb82611c61565b610e2982826001611c95565b610130546001600160a01b03163314611035576040805162461bcd60e51b815260206004820152601b60248201526000805160206129c6833981519152604482015290519081900360640190fd5b610e298282611ddc565b6110576000805160206129e6833981519152336113e9565b6110735760405162461bcd60e51b8152600401610e1690612814565b6001600160a01b0390911660009081526101326020526040902055565b600054610100900460ff16806110a9575060005460ff16155b6110c55760405162461bcd60e51b8152600401610e16906128c7565b600054610100900460ff161580156110e7576000805461ffff19166101011790555b6001600160a01b03821661110d5760405162461bcd60e51b8152600401610e1690612895565b60fc805460ff191690556001600160a01b038216600081815260fb6020526040902080546001600160a01b0319169091179055611148611ec6565b6111606000805160206129e683398151915283611f41565b60fc8054610100600160a81b0319166101006001600160a01b038516021790558015610e29576000805461ff00191690555050565b6111ad6000805160206129e6833981519152336113e9565b6111c95760405162461bcd60e51b8152600401610e1690612814565b6001600160a01b0381166111ef5760405162461bcd60e51b8152600401610e1690612895565b6001600160a01b03818116600090815260fb602052604090205416156112615760405162461bcd60e51b815260206004820152602160248201527f436f6e74726f6c6c65723a2061646d696e20616c7265616479206578697374656044820152601960fa1b6064820152608401610e16565b6001600160a01b038116600081815260fb6020526040902080546001600160a01b0319169091179055610e516000805160206129e683398151915282611f41565b60fc5461010090046001600160a01b031633146112d15760405162461bcd60e51b8152600401610e1690612843565b60fc5460ff16156113195760405162461bcd60e51b815260206004820152601260248201527110dbdb9d1c9bdb1b195c8e881c185d5cd95960721b6044820152606401610e16565b60fc805460ff191660011790556040517f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890610f719033906127cd565b61136e6000805160206129e6833981519152336113e9565b61138a5760405162461bcd60e51b8152600401610e1690612814565b60fc80546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6113ca6000805160206129e683398151915233610daa565b33600090815260fb6020526040902080546001600160a01b0319169055565b600091825260c9602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600054610100900460ff168061142d575060005460ff16155b6114495760405162461bcd60e51b8152600401610e16906128c7565b600054610100900460ff1615801561146b576000805461ffff19166101011790555b61147433611090565b61013080546001600160a01b0319166001600160a01b0384161790558015610e29576000805461ff00191690555050565b6114bd6000805160206129e6833981519152336113e9565b6114d95760405162461bcd60e51b8152600401610e1690612814565b6001600160a01b0390911660009081526101316020526040902055565b600082815260c960205260409020600101546115128133611b10565b610da58383611bfa565b610130546001600160a01b0316331461156a576040805162461bcd60e51b815260206004820152601b60248201526000805160206129c6833981519152604482015290519081900360640190fd5b8261157481611a8c565b6115bb576040805162461bcd60e51b8152602060048201526013602482015272151bdad95b881b9bdd081cdd5c1c1bdc9d1959606a1b604482015290519081900360640190fd5b6001600160a01b03808516600090815261012f6020908152604080832054815163852a12e360e01b81526004810188905291518995919091169384939092849263852a12e39260248084019391929182900301818787803b15801561161f57600080fd5b505af1158015611633573d6000803e3d6000fd5b505050506040513d602081101561164957600080fd5b50519050801561169d576040805162461bcd60e51b815260206004820152601a60248201527922b93937b9103932b232b2b6b4b733903a34329031aa37b5b2b760311b604482015290519081900360640190fd5b6116b16001600160a01b0385168888611aad565b5050505050505050565b6116d36000805160206129e6833981519152336113e9565b6116ef5760405162461bcd60e51b8152600401610e1690612814565b6001600160a01b03918216600090815261012f6020526040902080546001600160a01b03191691909216179055565b6001600160a01b03808216600090815261012f602090815260408083205481516370a0823160e01b81523060048201529151939416928392600a9284926370a0823192602480840193919291829003018186803b15801561177e57600080fd5b505afa158015611792573d6000803e3d6000fd5b505050506040513d60208110156117a857600080fd5b5051116117b9575060009392505050565b6000816001600160a01b031663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b1580156117f457600080fd5b505afa158015611808573d6000803e3d6000fd5b505050506040513d602081101561181e57600080fd5b5051604080516370a0823160e01b815230600482015290519192506000916001600160a01b038516916370a08231916024808301926020929190829003018186803b15801561186c57600080fd5b505afa158015611880573d6000803e3d6000fd5b505050506040513d602081101561189657600080fd5b50519050670de0b6b3a76400006118ad838361294d565b6118b7919061292d565b9695505050505050565b806118cb81611a8c565b611912576040805162461bcd60e51b8152602060048201526013602482015272151bdad95b881b9bdd081cdd5c1c1bdc9d1959606a1b604482015290519081900360640190fd5b6001600160a01b03808316600081815261012f602090815260408083205481516370a0823160e01b815230600482015291518896919091169485949390926370a082319260248083019392829003018186803b15801561197157600080fd5b505afa158015611985573d6000803e3d6000fd5b505050506040513d602081101561199b57600080fd5b505190506119b46001600160a01b038516846000611f4b565b6119c86001600160a01b0385168483611f4b565b6000826001600160a01b031663a0712d68836040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b158015611a1057600080fd5b505af1158015611a24573d6000803e3d6000fd5b505050506040513d6020811015611a3a57600080fd5b505190508015610c45576040805162461bcd60e51b815260206004820152601860248201527722b93937b91036b4b73a34b733903a34329031aa37b5b2b760411b604482015290519081900360640190fd5b6001600160a01b03908116600090815261012f602052604090205416151590565b6040516001600160a01b038316602482015260448101829052610da590849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261206f565b611b1a82826113e9565b610e2957611b32816001600160a01b03166014612141565b611b3d836020612141565b604051602001611b4e92919061275e565b60408051601f198184030181529082905262461bcd60e51b8252610e16916004016127e1565b611b7e82826113e9565b610e2957600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff19166001179055611bb63390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b611c0482826113e9565b15610e2957600082815260c9602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b611c796000805160206129e6833981519152336113e9565b610e515760405162461bcd60e51b8152600401610e1690612814565b6000611c9f61232a565b9050611caa84612358565b600083511180611cb75750815b15611cc857611cc684846123fd565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff16611dd557805460ff19166001178155604051611d43908690611d149085906024016127cd565b60408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b1790526123fd565b50805460ff19168155611d5461232a565b6001600160a01b0316826001600160a01b031614611dcc5760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b6064820152608401610e16565b611dd5856124e8565b5050505050565b6001600160a01b038116611e33576040805162461bcd60e51b8152602060048201526019602482015278526563697069656e742063616e206e6f74206265207a65726f60381b604482015290519081900360640190fd5b604080516370a0823160e01b8152306004820152905183916000916001600160a01b038416916370a08231916024808301926020929190829003018186803b158015611e7e57600080fd5b505afa158015611e92573d6000803e3d6000fd5b505050506040513d6020811015611ea857600080fd5b50519050611ec06001600160a01b0383168483611aad565b50505050565b600054610100900460ff1680611edf575060005460ff16155b611efb5760405162461bcd60e51b8152600401610e16906128c7565b600054610100900460ff16158015611f1d576000805461ffff19166101011790555b611f25612528565b611f2d612528565b8015610e51576000805461ff001916905550565b610e298282611b74565b801580611fd45750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b158015611f9a57600080fd5b505afa158015611fae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fd2919061272a565b155b61203f5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610e16565b6040516001600160a01b038316602482015260448101829052610da590849063095ea7b360e01b90606401611ad9565b60006120c4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166125929092919063ffffffff16565b805190915015610da557808060200190518101906120e2919061270a565b610da55760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610e16565b6060600061215083600261294d565b61215b906002612915565b67ffffffffffffffff81111561218157634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156121ab576020820181803683370190505b509050600360fc1b816000815181106121d457634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061221157634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600061223584600261294d565b612240906001612915565b90505b60018111156122d4576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061228257634e487b7160e01b600052603260045260246000fd5b1a60f81b8282815181106122a657634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c936122cd81612998565b9050612243565b5083156123235760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610e16565b9392505050565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b803b6123bc5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610e16565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6060823b61245c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610e16565b600080846001600160a01b0316846040516124779190612742565b600060405180830381855af49150503d80600081146124b2576040519150601f19603f3d011682016040523d82523d6000602084013e6124b7565b606091505b50915091506124df8282604051806060016040528060278152602001612a06602791396125a9565b95945050505050565b6124f181612358565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b600054610100900460ff1680612541575060005460ff16155b61255d5760405162461bcd60e51b8152600401610e16906128c7565b600054610100900460ff16158015611f2d576000805461ffff19166101011790558015610e51576000805461ff001916905550565b60606125a184846000856125e2565b949350505050565b606083156125b8575081612323565b8251156125c85782518084602001fd5b8160405162461bcd60e51b8152600401610e1691906127e1565b6060824710156126435760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610e16565b843b6126915760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610e16565b600080866001600160a01b031685876040516126ad9190612742565b60006040518083038185875af1925050503d80600081146126ea576040519150601f19603f3d011682016040523d82523d6000602084013e6126ef565b606091505b50915091506126ff8282866125a9565b979650505050505050565b60006020828403121561271b578081fd5b81518015158114612323578182fd5b60006020828403121561273b578081fd5b5051919050565b6000825161275481846020870161296c565b9190910192915050565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b81526000835161279081601785016020880161296c565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516127c181602884016020880161296c565b01602801949350505050565b6001600160a01b0391909116815260200190565b602081526000825180602084015261280081604085016020870161296c565b601f01601f19169190910160400192915050565b60208082526015908201527421b7b73a3937b63632b91d103737ba1030b236b4b760591b604082015260600190565b60208082526032908201527f436f6e74726f6c6c65723a2063616c6c657220646f6573206e6f7420686176656040820152712074686520677561726469616e20726f6c6560701b606082015260800190565b602080825260189082015277436f6e74726f6c6c65723a2061646472657373207a65726f60401b604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60008219821115612928576129286129af565b500190565b60008261294857634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615612967576129676129af565b500290565b60005b8381101561298757818101518382015260200161296f565b83811115611ec05750506000910152565b6000816129a7576129a76129af565b506000190190565b634e487b7160e01b600052601160045260246000fdfe4f6e6c79206173736574206d616e616765722063616e2063616c6c00000000002172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca025096416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220beef4290dbefa3d39d51b677b50b0a2afaf5476d0c08ee5747041fb1423d4c7b64736f6c63430008040033",
  "devdoc": {
    "details": "The implementation of Compound.Finance MoneyMarket that integrates with AssetManager.",
    "kind": "dev",
    "methods": {
      "addAdmin(address)": {
        "details": "Add a new admin account",
        "params": {
          "account": "Account address"
        }
      },
      "deposit(address)": {
        "details": "Deposits the given amount of tokens in the underlying money market."
      },
      "getRate(address)": {
        "details": "Returns the interest rate per block for the given token."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getSupply(address)": {
        "details": "Returns the supply for the given token, including accrued interest. This function can have side effects."
      },
      "getSupplyView(address)": {
        "details": "Returns the supply for the given token; it might not include accrued interest. This function *cannot* have side effects."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "isAdmin(address)": {
        "details": "Check if the address provided is the admin",
        "params": {
          "account": "Account address"
        }
      },
      "pause()": {
        "details": "Called by a pauser to pause, triggers stopped state."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceAdmin()": {
        "details": "Renouce the admin from the sender's address"
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "setGuardian(address)": {
        "details": "Set pauseGuardian account",
        "params": {
          "account": "Account address"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "supportsToken(address)": {
        "details": "Indicates if the adapter supports the token with the given address."
      },
      "unpause()": {
        "details": "Called by a pauser to unpause, returns to normal state."
      },
      "upgradeTo(address)": {
        "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
      },
      "upgradeToAndCall(address,bytes)": {
        "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
      },
      "withdrawAll(address,address)": {
        "details": "Withdraws all the tokens from the underlying money market and transfers them to `recipient`."
      }
    },
    "stateVariables": {
      "ceilingMap": {
        "details": "The maximum amount that should be deposited in money market",
        "params": {
          "tokenAddress": "The address of token whose ceiling is being fetched"
        }
      },
      "floorMap": {
        "details": "The minimum amount that should be deposited in money market before moving to next priority market",
        "params": {
          "tokenAddress": "The address of token whose floor is being fetched"
        }
      }
    },
    "title": "CompoundAdapter",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 821,
        "contract": "contracts/asset/CompoundAdapter.sol:CompoundAdapter",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 824,
        "contract": "contracts/asset/CompoundAdapter.sol:CompoundAdapter",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 804,
        "contract": "contracts/asset/CompoundAdapter.sol:CompoundAdapter",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 937,
        "contract": "contracts/asset/CompoundAdapter.sol:CompoundAdapter",
        "label": "__gap",
        "offset": 0,
        "slot": "51",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 2184,
        "contract": "contracts/asset/CompoundAdapter.sol:CompoundAdapter",
        "label": "__gap",
        "offset": 0,
        "slot": "101",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 2493,
        "contract": "contracts/asset/CompoundAdapter.sol:CompoundAdapter",
        "label": "__gap",
        "offset": 0,
        "slot": "151",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 48,
        "contract": "contracts/asset/CompoundAdapter.sol:CompoundAdapter",
        "label": "_roles",
        "offset": 0,
        "slot": "201",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)"
      },
      {
        "astId": 333,
        "contract": "contracts/asset/CompoundAdapter.sol:CompoundAdapter",
        "label": "__gap",
        "offset": 0,
        "slot": "202",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 11052,
        "contract": "contracts/asset/CompoundAdapter.sol:CompoundAdapter",
        "label": "_admins",
        "offset": 0,
        "slot": "251",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 11054,
        "contract": "contracts/asset/CompoundAdapter.sol:CompoundAdapter",
        "label": "_paused",
        "offset": 0,
        "slot": "252",
        "type": "t_bool"
      },
      {
        "astId": 11056,
        "contract": "contracts/asset/CompoundAdapter.sol:CompoundAdapter",
        "label": "pauseGuardian",
        "offset": 1,
        "slot": "252",
        "type": "t_address"
      },
      {
        "astId": 11296,
        "contract": "contracts/asset/CompoundAdapter.sol:CompoundAdapter",
        "label": "______gap",
        "offset": 0,
        "slot": "253",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 13620,
        "contract": "contracts/asset/CompoundAdapter.sol:CompoundAdapter",
        "label": "tokenToCToken",
        "offset": 0,
        "slot": "303",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 13622,
        "contract": "contracts/asset/CompoundAdapter.sol:CompoundAdapter",
        "label": "assetManager",
        "offset": 0,
        "slot": "304",
        "type": "t_address"
      },
      {
        "astId": 13627,
        "contract": "contracts/asset/CompoundAdapter.sol:CompoundAdapter",
        "label": "floorMap",
        "offset": 0,
        "slot": "305",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 13632,
        "contract": "contracts/asset/CompoundAdapter.sol:CompoundAdapter",
        "label": "ceilingMap",
        "offset": 0,
        "slot": "306",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)43_storage"
      },
      "t_struct(RoleData)43_storage": {
        "encoding": "inplace",
        "label": "struct AccessControlUpgradeable.RoleData",
        "members": [
          {
            "astId": 40,
            "contract": "contracts/asset/CompoundAdapter.sol:CompoundAdapter",
            "label": "members",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 42,
            "contract": "contracts/asset/CompoundAdapter.sol:CompoundAdapter",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}