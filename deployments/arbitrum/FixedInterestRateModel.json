{
  "address": "0x051e2514E3fE8da88CaA2951442a21042BCe99Ea",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "interestRatePerBlock_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "interestRate",
          "type": "uint256"
        }
      ],
      "name": "LogNewInterestParams",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BORROW_RATE_MAX_MANTISSA",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBorrowRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "reserveFactorMantissa",
          "type": "uint256"
        }
      ],
      "name": "getSupplyRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "interestRatePerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isInterestRateModel",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "interestRatePerBlock_",
          "type": "uint256"
        }
      ],
      "name": "setInterestRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xfbfeaeedbcda676dbf5d4780d58006ffd078226688819cbd09c0e51bab162691",
  "receipt": {
    "to": null,
    "from": "0x497C20fEd24D61C7506EF2500065e4fd662f3779",
    "contractAddress": "0x051e2514E3fE8da88CaA2951442a21042BCe99Ea",
    "transactionIndex": 0,
    "gasUsed": "5033332",
    "logsBloom": "0x
    "blockHash": "0xf59b6fa0d39d4ce7a0a6f295fd5571b6dd6360b6f3999c6e58b0eaf72205f199",
    "transactionHash": "0xfbfeaeedbcda676dbf5d4780d58006ffd078226688819cbd09c0e51bab162691",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 6172923,
        "transactionHash": "0xfbfeaeedbcda676dbf5d4780d58006ffd078226688819cbd09c0e51bab162691",
        "address": "0x051e2514E3fE8da88CaA2951442a21042BCe99Ea",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000497c20fed24d61c7506ef2500065e4fd662f3779"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xf59b6fa0d39d4ce7a0a6f295fd5571b6dd6360b6f3999c6e58b0eaf72205f199"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 6172923,
        "transactionHash": "0xfbfeaeedbcda676dbf5d4780d58006ffd078226688819cbd09c0e51bab162691",
        "address": "0x051e2514E3fE8da88CaA2951442a21042BCe99Ea",
        "topics": [
          "0x72b60adc9f1a39b51ceffe989f8fdaf749fbee6059c5d0ba7e5e1ed5d455b943"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000000009b3a7fe37",
        "logIndex": 1,
        "blockHash": "0xf59b6fa0d39d4ce7a0a6f295fd5571b6dd6360b6f3999c6e58b0eaf72205f199"
      }
    ],
    "blockNumber": 6172923,
    "cumulativeGasUsed": "2082432",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "41668836919"
  ],
  "solcInputHash": "4793ff3a0960b82e3cabf228d8731952",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"interestRatePerBlock_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"}],\"name\":\"LogNewInterestParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BORROW_RATE_MAX_MANTISSA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBorrowRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reserveFactorMantissa\",\"type\":\"uint256\"}],\"name\":\"getSupplyRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interestRatePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isInterestRateModel\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"interestRatePerBlock_\",\"type\":\"uint256\"}],\"name\":\"setInterestRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"LogNewInterestParams(uint256)\":{\"details\":\"Update interest parameters event\",\"params\":{\"interestRate\":\"New interest rate, 1e18 = 100%\"}}},\"kind\":\"dev\",\"methods\":{\"getBorrowRate()\":{\"details\":\"Calculates the current borrow interest rate per block\",\"returns\":{\"_0\":\"The borrow rate per block (as a percentage, and scaled by 1e18)\"}},\"getSupplyRate(uint256)\":{\"details\":\"Calculates the current suppier interest rate per block\",\"returns\":{\"_0\":\"The supply rate per block (as a percentage, and scaled by 1e18)\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setInterestRate(uint256)\":{\"details\":\"Set the borrow interest rate per block\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"isInterestRateModel\":{\"details\":\"Check to see if it is a valid interest rate model\",\"return\":\"Return true for a valid interest rate model\",\"returns\":{\"_0\":\"Return true for a valid interest rate model\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/market/FixedInterestRateModel.sol\":\"FixedInterestRateModel\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/interfaces/IInterestRateModel.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.4;\\n\\n/**\\n * @title InterestRateModel Interface\\n *  @dev Calculate the borrowers' interest rate.\\n */\\ninterface IInterestRateModel {\\n    /**\\n     * @dev Check to see if it is a valid interest rate model\\n     * @return Return true for a valid interest rate model\\n     */\\n    function isInterestRateModel() external pure returns (bool);\\n\\n    /**\\n     * @dev Calculates the current borrow interest rate per block\\n     * @return The borrow rate per block (as a percentage, and scaled by 1e18)\\n     */\\n    function getBorrowRate() external view returns (uint256);\\n\\n    /**\\n     * @dev Calculates the current suppier interest rate per block\\n     * @return The supply rate per block (as a percentage, and scaled by 1e18)\\n     */\\n    function getSupplyRate(uint256 reserveFactorMantissa) external view returns (uint256);\\n\\n    /**\\n     * @dev Set the borrow interest rate per block\\n     */\\n    function setInterestRate(uint256 interestRatePerBlock_) external;\\n}\\n\",\"keccak256\":\"0x2d1ee03f23bdbb272a39ccc2ee06213d3ae116ce046bacbf163c53091a0bc4be\",\"license\":\"UNLICENSED\"},\"contracts/market/FixedInterestRateModel.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.4;\\npragma abicoder v1;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nimport \\\"../interfaces/IInterestRateModel.sol\\\";\\n\\ncontract FixedInterestRateModel is Ownable, IInterestRateModel {\\n    uint256 public constant BORROW_RATE_MAX_MANTISSA = 0.005e16; //Maximum borrow rate that can ever be applied (.005% / block)\\n    bool public constant override isInterestRateModel = true;\\n    uint256 public interestRatePerBlock;\\n\\n    /**\\n     *  @dev Update interest parameters event\\n     *  @param interestRate New interest rate, 1e18 = 100%\\n     */\\n    event LogNewInterestParams(uint256 interestRate);\\n\\n    constructor(uint256 interestRatePerBlock_) {\\n        interestRatePerBlock = interestRatePerBlock_;\\n\\n        emit LogNewInterestParams(interestRatePerBlock_);\\n    }\\n\\n    function getBorrowRate() public view override returns (uint256) {\\n        return interestRatePerBlock;\\n    }\\n\\n    function getSupplyRate(uint256 reserveFactorMantissa) public view override returns (uint256) {\\n        require(reserveFactorMantissa <= 1e18, \\\"reserveFactorMantissa error\\\");\\n        uint256 ratio = uint256(1e18) - reserveFactorMantissa;\\n        return (interestRatePerBlock * ratio) / 1e18;\\n    }\\n\\n    function setInterestRate(uint256 interestRatePerBlock_) external override onlyOwner {\\n        require(interestRatePerBlock_ <= BORROW_RATE_MAX_MANTISSA, \\\"borrow rate is absurdly high\\\");\\n        interestRatePerBlock = interestRatePerBlock_;\\n        emit LogNewInterestParams(interestRatePerBlock_);\\n    }\\n}\\n\",\"keccak256\":\"0xe0cccc2e10db2d655c96f0c2a0563fbb6449fde0b1284edf6af29639d4d603b7\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161059f38038061059f8339818101604052602081101561003357600080fd5b505161003e3361007c565b60018190556040805182815290517f72b60adc9f1a39b51ceffe989f8fdaf749fbee6059c5d0ba7e5e1ed5d455b9439181900360200190a1506100cc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104c4806100db6000396000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c80632191f92a146100885780632ff7709e146100a45780635f84f302146100bf578063715018a6146100de578063751229b3146100e65780638da5cb5b146100f3578063ba1c5e801461011b578063d955759d14610123578063f2fde38b14610140575b600080fd5b610090600181565b604080519115158252519081900360200190f35b6100ad60015481565b60408051918252519081900360200190f35b6100dc600480360360208110156100d557600080fd5b5035610166565b005b6100dc61022f565b6100ad652d79883d200081565b6000546001600160a01b0316604080516001600160a01b039092168252519081900360200190f35b6001546100ad565b6100ad6004803603602081101561013957600080fd5b5035610265565b6100dc6004803603602081101561015657600080fd5b50356001600160a01b0316610302565b6000546001600160a01b031633146101995760405162461bcd60e51b8152600401610190906103ed565b60405180910390fd5b652d79883d20008111156101f4576040805162461bcd60e51b815260206004820152601c60248201527f626f72726f772072617465206973206162737572646c79206869676800000000604482015290519081900360640190fd5b60018190556040805182815290517f72b60adc9f1a39b51ceffe989f8fdaf749fbee6059c5d0ba7e5e1ed5d455b9439181900360200190a150565b6000546001600160a01b031633146102595760405162461bcd60e51b8152600401610190906103ed565b610263600061039d565b565b6000670de0b6b3a76400008211156102c4576040805162461bcd60e51b815260206004820152601b60248201527f72657365727665466163746f724d616e7469737361206572726f720000000000604482015290519081900360640190fd5b60006102d883670de0b6b3a7640000610461565b9050670de0b6b3a7640000816001546102f19190610442565b6102fb9190610422565b9392505050565b6000546001600160a01b0316331461032c5760405162461bcd60e51b8152600401610190906103ed565b6001600160a01b0381166103915760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610190565b61039a8161039d565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008261043d57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561045c5761045c610478565b500290565b60008282101561047357610473610478565b500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212202dd1933fa6bf43b8551878028fbf501aeb346a0e5b1df21469cf352cfa9b0df964736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100835760003560e01c80632191f92a146100885780632ff7709e146100a45780635f84f302146100bf578063715018a6146100de578063751229b3146100e65780638da5cb5b146100f3578063ba1c5e801461011b578063d955759d14610123578063f2fde38b14610140575b600080fd5b610090600181565b604080519115158252519081900360200190f35b6100ad60015481565b60408051918252519081900360200190f35b6100dc600480360360208110156100d557600080fd5b5035610166565b005b6100dc61022f565b6100ad652d79883d200081565b6000546001600160a01b0316604080516001600160a01b039092168252519081900360200190f35b6001546100ad565b6100ad6004803603602081101561013957600080fd5b5035610265565b6100dc6004803603602081101561015657600080fd5b50356001600160a01b0316610302565b6000546001600160a01b031633146101995760405162461bcd60e51b8152600401610190906103ed565b60405180910390fd5b652d79883d20008111156101f4576040805162461bcd60e51b815260206004820152601c60248201527f626f72726f772072617465206973206162737572646c79206869676800000000604482015290519081900360640190fd5b60018190556040805182815290517f72b60adc9f1a39b51ceffe989f8fdaf749fbee6059c5d0ba7e5e1ed5d455b9439181900360200190a150565b6000546001600160a01b031633146102595760405162461bcd60e51b8152600401610190906103ed565b610263600061039d565b565b6000670de0b6b3a76400008211156102c4576040805162461bcd60e51b815260206004820152601b60248201527f72657365727665466163746f724d616e7469737361206572726f720000000000604482015290519081900360640190fd5b60006102d883670de0b6b3a7640000610461565b9050670de0b6b3a7640000816001546102f19190610442565b6102fb9190610422565b9392505050565b6000546001600160a01b0316331461032c5760405162461bcd60e51b8152600401610190906103ed565b6001600160a01b0381166103915760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610190565b61039a8161039d565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008261043d57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561045c5761045c610478565b500290565b60008282101561047357610473610478565b500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212202dd1933fa6bf43b8551878028fbf501aeb346a0e5b1df21469cf352cfa9b0df964736f6c63430008040033",
  "devdoc": {
    "events": {
      "LogNewInterestParams(uint256)": {
        "details": "Update interest parameters event",
        "params": {
          "interestRate": "New interest rate, 1e18 = 100%"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "getBorrowRate()": {
        "details": "Calculates the current borrow interest rate per block",
        "returns": {
          "_0": "The borrow rate per block (as a percentage, and scaled by 1e18)"
        }
      },
      "getSupplyRate(uint256)": {
        "details": "Calculates the current suppier interest rate per block",
        "returns": {
          "_0": "The supply rate per block (as a percentage, and scaled by 1e18)"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setInterestRate(uint256)": {
        "details": "Set the borrow interest rate per block"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "stateVariables": {
      "isInterestRateModel": {
        "details": "Check to see if it is a valid interest rate model",
        "return": "Return true for a valid interest rate model",
        "returns": {
          "_0": "Return true for a valid interest rate model"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3806,
        "contract": "contracts/market/FixedInterestRateModel.sol:FixedInterestRateModel",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 17320,
        "contract": "contracts/market/FixedInterestRateModel.sol:FixedInterestRateModel",
        "label": "interestRatePerBlock",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}