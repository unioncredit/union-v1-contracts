{
  "address": "0xf5FAaC2191f0a17162Fd1E672c89556038b7dabc",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_routerAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_gatewayAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_unionToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "Unwhitelisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "WhitelistDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "WhitelistEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "Whitelisted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gateway",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isArbitrumEnabled",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "isWhitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "l2CustomTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maxSubmissionCostForCustomBridge",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxSubmissionCostForRouter",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasPriceBid",
          "type": "uint256"
        }
      ],
      "name": "registerTokenOnL2",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "router",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferDev",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unionToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "unwhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "unwrap",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "whitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "whitelistEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "wrap",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_gasPriceBid",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "wrapAndBridge",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x44eea8b00260b9a1575dbd7a2a9fcf483457952a22950fa32354bdbbe6cffc3f",
  "receipt": {
    "to": null,
    "from": "0x7a0C61EdD8b5c0c5C1437AEb571d7DDbF8022Be4",
    "contractAddress": "0xf5FAaC2191f0a17162Fd1E672c89556038b7dabc",
    "transactionIndex": 37,
    "gasUsed": "1857597",
    "logsBloom": "0x
    "blockHash": "0xbbb97106a2371047db68feb5cec206faf2a91e912664239fd987d58d69f05b3f",
    "transactionHash": "0x44eea8b00260b9a1575dbd7a2a9fcf483457952a22950fa32354bdbbe6cffc3f",
    "logs": [
      {
        "transactionIndex": 37,
        "blockNumber": 10125404,
        "transactionHash": "0x44eea8b00260b9a1575dbd7a2a9fcf483457952a22950fa32354bdbbe6cffc3f",
        "address": "0xf5FAaC2191f0a17162Fd1E672c89556038b7dabc",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000007a0c61edd8b5c0c5c1437aeb571d7ddbf8022be4"
        ],
        "data": "0x",
        "logIndex": 77,
        "blockHash": "0xbbb97106a2371047db68feb5cec206faf2a91e912664239fd987d58d69f05b3f"
      },
      {
        "transactionIndex": 37,
        "blockNumber": 10125404,
        "transactionHash": "0x44eea8b00260b9a1575dbd7a2a9fcf483457952a22950fa32354bdbbe6cffc3f",
        "address": "0xf5FAaC2191f0a17162Fd1E672c89556038b7dabc",
        "topics": [
          "0xaab7954e9d246b167ef88aeddad35209ca2489d95a8aeb59e288d9b19fae5a54",
          "0x000000000000000000000000917dc9a69f65dc3082d518192cd3725e1fa96ca2"
        ],
        "data": "0x",
        "logIndex": 78,
        "blockHash": "0xbbb97106a2371047db68feb5cec206faf2a91e912664239fd987d58d69f05b3f"
      }
    ],
    "blockNumber": 10125404,
    "cumulativeGasUsed": "10169014",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x70C143928eCfFaf9F5b406f7f4fC28Dc43d68380",
    "0x917dc9a69F65dC3082D518192cd3725E1Fa96cA2",
    "0xBd3a3c823A7442193BE5Ca8005D98F0599Cc8bD5"
  ],
  "solcInputHash": "0206500f31a371705caf7393d722b450",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_routerAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gatewayAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_unionToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"Unwhitelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"WhitelistDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"WhitelistEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"Whitelisted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gateway\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isArbitrumEnabled\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l2CustomTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxSubmissionCostForCustomBridge\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSubmissionCostForRouter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasPriceBid\",\"type\":\"uint256\"}],\"name\":\"registerTokenOnL2\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferDev\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unionToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"unwhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unwrap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whitelistEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"wrap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_gasPriceBid\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"wrapAndBridge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"isWhitelisted(address)\":{\"details\":\"Checks if account is whitelisted\",\"params\":{\"_account\":\"The address to check\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unwhitelist(address)\":{\"details\":\"Removes account from whitelist\",\"params\":{\"_account\":\"The address to remove from the whitelist\"}},\"whitelist(address)\":{\"details\":\"Adds account to whitelist\",\"params\":{\"_account\":\"The address to whitelist\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"disableWhitelist()\":{\"notice\":\"disable whitelist and allow transfers for everyone\"},\"enableWhitelist()\":{\"notice\":\"enable whitelist and only allow transfers from whitelisted addresses\"},\"transferDev()\":{\"notice\":\"Safety measure to transfer UNION to owner \"},\"unwrap(uint256)\":{\"notice\":\"Burn pegged token and return UNION\"},\"wrap(uint256)\":{\"notice\":\"Wrap UNION to create Arbitrum compatible token\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ArbUnionWrapper.sol\":\"ArbUnionWrapper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n\\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\\n        require(currentAllowance >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n        unchecked {\\n            _approve(sender, _msgSender(), currentAllowance - amount);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        uint256 senderBalance = _balances[sender];\\n        require(senderBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[sender] = senderBalance - amount;\\n        }\\n        _balances[recipient] += amount;\\n\\n        emit Transfer(sender, recipient, amount);\\n\\n        _afterTokenTransfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/interfaces/ICustomGateway.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface ICustomGateway {\\n    function registerTokenToL2(\\n        address _l2CustomTokenAddress,\\n        uint256 _maxGas,\\n        uint256 _gasPriceBid,\\n        uint256 _maxSubmissionCostForCustomBridge\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0xc50ff46d69ca08332d1db3df8be4b264d22fd631aac2864cdac3042aea135a98\",\"license\":\"MIT\"},\"contracts/interfaces/IGatewayRouter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IGatewayRouter {\\n    function outboundTransfer(\\n        address _l1Token,\\n        address _to,\\n        uint256 _amount,\\n        uint256 _maxGas,\\n        uint256 _gasPriceBid,\\n        bytes calldata _data\\n    ) external payable returns (bytes memory res);\\n\\n    function setGateway(\\n        address _gateway,\\n        uint256 _maxGas,\\n        uint256 _gasPriceBid,\\n        uint256 _maxSubmissionCost\\n    ) external payable returns (uint256);\\n}\\n\",\"keccak256\":\"0xec53757a4bd8f9e775102f4c3dac563388bf228495d7074bed1f0c039f659c92\",\"license\":\"MIT\"},\"contracts/token/ArbUnionWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport {IGatewayRouter} from \\\"../interfaces/IGatewayRouter.sol\\\";\\nimport {ICustomGateway} from \\\"../interfaces/ICustomGateway.sol\\\";\\nimport {Whitelistable} from \\\"./Whitelistable.sol\\\";\\n\\ncontract ArbUnionWrapper is ERC20, Whitelistable {\\n    using SafeERC20 for IERC20;\\n\\n    address public immutable unionToken;\\n    address public immutable router;\\n    address public gateway;\\n    bool private shouldRegisterGateway;\\n\\n    constructor(\\n        address _routerAddr,\\n        address _gatewayAddr,\\n        address _unionToken\\n    ) ERC20(\\\"Arb UNION Wrapper\\\", \\\"arbUNION\\\") {\\n        router = _routerAddr;\\n        gateway = _gatewayAddr;\\n        unionToken = _unionToken;\\n        whitelist(gateway);\\n    }\\n\\n    /**\\n     * Wrap UNION to create Arbitrum compatible token\\n     */\\n    function wrap(uint256 _amount) public returns (bool) {\\n        IERC20 _token = IERC20(unionToken);\\n        require(_token.balanceOf(address(msg.sender)) >= _amount, \\\"Insufficient balance\\\");\\n        _token.safeTransferFrom(msg.sender, address(this), _amount);\\n        _mint(msg.sender, _amount);\\n        _approve(msg.sender, gateway, type(uint256).max);\\n        return true;\\n    }\\n\\n    function wrapAndBridge(\\n        uint256 _amount,\\n        uint256 _maxGas,\\n        uint256 _gasPriceBid,\\n        bytes calldata _data\\n    ) external payable returns (bool) {\\n        wrap(_amount);\\n        IGatewayRouter(router).outboundTransfer{value: msg.value}(\\n            address(this),\\n            msg.sender,\\n            _amount,\\n            _maxGas,\\n            _gasPriceBid,\\n            _data\\n        );\\n        return true;\\n    }\\n\\n    /**\\n     * Burn pegged token and return UNION\\n     */\\n    function unwrap(uint256 _amount) external returns (bool) {\\n        require(balanceOf(msg.sender) >= _amount, \\\"Insufficient balance\\\");\\n        _burn(msg.sender, _amount);\\n        IERC20(unionToken).safeTransfer(msg.sender, _amount);\\n        return true;\\n    }\\n\\n    /** Safety measure to transfer UNION to owner */\\n    function transferDev() external onlyOwner returns (bool) {\\n        IERC20 token = IERC20(unionToken);\\n        uint256 balance = token.balanceOf(address(this));\\n        return token.transfer(msg.sender, balance);\\n    }\\n\\n    function isArbitrumEnabled() external view returns (uint16) {\\n        require(shouldRegisterGateway, \\\"NOT_EXPECTED_CALL\\\");\\n        return uint16(0xa4b1);\\n    }\\n\\n    function registerTokenOnL2(\\n        address l2CustomTokenAddress,\\n        uint256 maxSubmissionCostForCustomBridge,\\n        uint256 maxSubmissionCostForRouter,\\n        uint256 maxGas,\\n        uint256 gasPriceBid\\n    ) public payable onlyOwner {\\n        // we temporarily set `shouldRegisterGateway` to true for the callback in registerTokenToL2 to succeed\\n        bool prev = shouldRegisterGateway;\\n        shouldRegisterGateway = true;\\n\\n        uint256 gas1 = maxSubmissionCostForCustomBridge + maxGas * gasPriceBid;\\n        uint256 gas2 = maxSubmissionCostForRouter + maxGas * gasPriceBid;\\n        require(msg.value == gas1 + gas2, \\\"OVERPAY\\\");\\n\\n        ICustomGateway(gateway).registerTokenToL2{value: gas1}(\\n            l2CustomTokenAddress,\\n            maxGas,\\n            gasPriceBid,\\n            maxSubmissionCostForCustomBridge\\n        );\\n\\n        IGatewayRouter(router).setGateway{value: gas2}(gateway, maxGas, gasPriceBid, maxSubmissionCostForRouter);\\n\\n        shouldRegisterGateway = prev;\\n    }\\n\\n    function getChainId() public view returns (uint256 chainId) {\\n        assembly {\\n            chainId := chainid()\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x69ba8f1853547e389028888d9c8a9ffff4a814c454dab5abcdbde6dbb4a47897\",\"license\":\"MIT\"},\"contracts/token/Whitelistable.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.4;\\npragma abicoder v1;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nabstract contract Whitelistable is Ownable {\\n    // allow all transfers when set as false\\n    bool public whitelistEnabled;\\n\\n    // allow transfers when `whitelistEnabled` is set as true\\n    mapping(address => bool) internal _whitelisted;\\n\\n    event Whitelisted(address indexed _account);\\n    event Unwhitelisted(address indexed _account);\\n    event WhitelistEnabled();\\n    event WhitelistDisabled();\\n\\n    modifier checkWhitelist() {\\n        if (whitelistEnabled) {\\n            require(_whitelisted[msg.sender], \\\"Whitelistable: address not whitelisted\\\");\\n        }\\n        _;\\n    }\\n\\n    /**\\n     * @notice enable whitelist and only allow transfers from whitelisted addresses\\n     */\\n    function enableWhitelist() external onlyOwner {\\n        whitelistEnabled = true;\\n        emit WhitelistEnabled();\\n    }\\n\\n    /**\\n     * @notice disable whitelist and allow transfers for everyone\\n     */\\n    function disableWhitelist() external onlyOwner {\\n        whitelistEnabled = false;\\n        emit WhitelistDisabled();\\n    }\\n\\n    /**\\n     * @dev Checks if account is whitelisted\\n     * @param _account The address to check\\n     */\\n    function isWhitelisted(address _account) public view returns (bool) {\\n        return _whitelisted[_account];\\n    }\\n\\n    /**\\n     * @dev Adds account to whitelist\\n     * @param _account The address to whitelist\\n     */\\n    function whitelist(address _account) public onlyOwner {\\n        require(_account != address(0), \\\"Whitelistable: account can not be zero\\\");\\n        _whitelisted[_account] = true;\\n        emit Whitelisted(_account);\\n    }\\n\\n    /**\\n     * @dev Removes account from whitelist\\n     * @param _account The address to remove from the whitelist\\n     */\\n    function unwhitelist(address _account) external onlyOwner {\\n        require(_account != address(0), \\\"Whitelistable: account can not be zero\\\");\\n        _whitelisted[_account] = false;\\n        emit Unwhitelisted(_account);\\n    }\\n}\\n\",\"keccak256\":\"0x9eb966effb07fe68ef937ef9afff1ab8b2019337cf911425d522ea38686ccaaa\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60c06040523480156200001157600080fd5b506040516200225f3803806200225f833981016040819052620000349162000319565b604080518082018252601181527020b931102aa724a7a7102bb930b83832b960791b60208083019182528351808501909452600884526730b9312aa724a7a760c11b9084015281519192916200008d9160039162000256565b508051620000a390600490602084019062000256565b505050620000c0620000ba6200010e60201b60201c565b62000112565b606083811b6001600160601b031990811660a052600780546001600160a01b0319166001600160a01b0386169081179091559183901b16608052620001059062000164565b5050506200039f565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6005546001600160a01b03163314620001c35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b6001600160a01b0381166200020a5760405162461bcd60e51b8152600401808060200182810382526026815260200180620022396026913960400191505060405180910390fd5b6001600160a01b038116600081815260066020526040808220805460ff19166001179055517faab7954e9d246b167ef88aeddad35209ca2489d95a8aeb59e288d9b19fae5a549190a250565b828054620002649062000362565b90600052602060002090601f016020900481019282620002885760008555620002d3565b82601f10620002a357805160ff1916838001178555620002d3565b82800160010185558215620002d3579182015b82811115620002d3578251825591602001919060010190620002b6565b50620002e1929150620002e5565b5090565b5b80821115620002e15760008155600101620002e6565b80516001600160a01b03811681146200031457600080fd5b919050565b6000806000606084860312156200032e578283fd5b6200033984620002fc565b92506200034960208501620002fc565b91506200035960408501620002fc565b90509250925092565b600181811c908216806200037757607f821691505b602082108114156200039957634e487b7160e01b600052602260045260246000fd5b50919050565b60805160601c60a05160601c611e4b620003ee600039600081816105720152818161065f015261084a01526000818161053e01528181610a6701528181610f350152610f760152611e4b6000f3fe60806040526004361061018d5760003560e01c80638da5cb5b116100d7578063cdfb2b4e11610085578063cdfb2b4e1461045c578063d6b0f48414610471578063dd62ed3e14610486578063de0e9a3e146104cc578063ea598cb0146104ec578063f2fde38b1461050c578063f70222e11461052c578063f887ea401461056057600080fd5b80638da5cb5b1461038a5780638e5f5ad11461039f57806395d89b41146103c75780639a590427146103dc5780639b19251a146103fc578063a457c2d71461041c578063a9059cbb1461043c57600080fd5b8063313ce5671161013f578063313ce567146102815780633408e4701461029d57806339509351146102b05780633af32abf146102d057806351fb012d1461030957806370a082311461032a578063715018a61461036057806381ddc60d1461037557600080fd5b806306fdde0314610192578063095ea7b3146101bd57806309dfcd06146101ed578063116191b61461020057806318160ddd1461022d578063181655941461024c57806323b872dd14610261575b600080fd5b34801561019e57600080fd5b506101a7610594565b6040516101b49190611c58565b60405180910390f35b3480156101c957600080fd5b506101dd6101d83660046119c1565b610626565b60405190151581526020016101b4565b6101dd6101fb366004611b19565b61063c565b34801561020c57600080fd5b50600754610220906001600160a01b031681565b6040516101b49190611bbd565b34801561023957600080fd5b506002545b6040519081526020016101b4565b61025f61025a3660046119ea565b610705565b005b34801561026d57600080fd5b506101dd61027c366004611986565b610904565b34801561028d57600080fd5b50604051601281526020016101b4565b3480156102a957600080fd5b504661023e565b3480156102bc57600080fd5b506101dd6102cb3660046119c1565b6109b0565b3480156102dc57600080fd5b506101dd6102eb36600461193a565b6001600160a01b031660009081526006602052604090205460ff1690565b34801561031557600080fd5b506005546101dd90600160a01b900460ff1681565b34801561033657600080fd5b5061023e61034536600461193a565b6001600160a01b031660009081526020819052604090205490565b34801561036c57600080fd5b5061025f6109ec565b34801561038157600080fd5b506101dd610a27565b34801561039657600080fd5b50610220610b83565b3480156103ab57600080fd5b506103b4610b92565b60405161ffff90911681526020016101b4565b3480156103d357600080fd5b506101a7610be9565b3480156103e857600080fd5b5061025f6103f736600461193a565b610bf8565b34801561040857600080fd5b5061025f61041736600461193a565b610cb5565b34801561042857600080fd5b506101dd6104373660046119c1565b610d75565b34801561044857600080fd5b506101dd6104573660046119c1565b610e0e565b34801561046857600080fd5b5061025f610e1b565b34801561047d57600080fd5b5061025f610e88565b34801561049257600080fd5b5061023e6104a1366004611954565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3480156104d857600080fd5b506101dd6104e7366004611ae9565b610eef565b3480156104f857600080fd5b506101dd610507366004611ae9565b610f64565b34801561051857600080fd5b5061025f61052736600461193a565b61105e565b34801561053857600080fd5b506102207f000000000000000000000000000000000000000000000000000000000000000081565b34801561056c57600080fd5b506102207f000000000000000000000000000000000000000000000000000000000000000081565b6060600380546105a390611d68565b80601f01602080910402602001604051908101604052809291908181526020018280546105cf90611d68565b801561061c5780601f106105f15761010080835404028352916020019161061c565b820191906000526020600020905b8154815290600101906020018083116105ff57829003601f168201915b5050505050905090565b60006106333384846110fe565b50600192915050565b600061064786610f64565b5060405163d2ce7d6560e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063d2ce7d659034906106a290309033908c908c908c908c908c90600401611bd1565b6000604051808303818588803b1580156106bb57600080fd5b505af11580156106cf573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f191682016040526106f89190810190611a4b565b5060019695505050505050565b3361070e610b83565b6001600160a01b03161461073d5760405162461bcd60e51b815260040161073490611cb9565b60405180910390fd5b60078054600160a01b60ff60a01b19821681179092550460ff1660006107638385611d06565b61076d9087611cee565b9050600061077b8486611d06565b6107859087611cee565b90506107918183611cee565b34146107c95760405162461bcd60e51b81526020600482015260076024820152664f56455250415960c81b6044820152606401610734565b60075460405163f26bdead60e01b81526001600160a01b039091169063f26bdead908490610801908c908a908a908e90600401611c32565b6000604051808303818588803b15801561081a57600080fd5b505af115801561082e573d6000803e3d6000fd5b505060075460405163dd61456960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116955063dd614569945086935061088b9216908a908a908d90600401611c32565b6020604051808303818588803b1580156108a457600080fd5b505af11580156108b8573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108dd9190611b01565b505060078054921515600160a01b0260ff60a01b1990931692909217909155505050505050565b6000610911848484611223565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156109965760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610734565b6109a385338584036110fe565b60019150505b9392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916106339185906109e7908690611cee565b6110fe565b336109f5610b83565b6001600160a01b031614610a1b5760405162461bcd60e51b815260040161073490611cb9565b610a2560006113e1565b565b600033610a32610b83565b6001600160a01b031614610a585760405162461bcd60e51b815260040161073490611cb9565b6040516370a0823160e01b81527f0000000000000000000000000000000000000000000000000000000000000000906000906001600160a01b038316906370a0823190610aa9903090600401611bbd565b60206040518083038186803b158015610ac157600080fd5b505afa158015610ad5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af99190611b01565b60405163a9059cbb60e01b8152336004820152602481018290529091506001600160a01b0383169063a9059cbb90604401602060405180830381600087803b158015610b4457600080fd5b505af1158015610b58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7c9190611a2b565b9250505090565b6005546001600160a01b031690565b600754600090600160a01b900460ff16610be25760405162461bcd60e51b81526020600482015260116024820152701393d517d156141150d5115117d0d05313607a1b6044820152606401610734565b5061a4b190565b6060600480546105a390611d68565b33610c01610b83565b6001600160a01b031614610c275760405162461bcd60e51b815260040161073490611cb9565b6001600160a01b038116610c6c5760405162461bcd60e51b8152600401808060200182810382526026815260200180611dd06026913960400191505060405180910390fd5b6001600160a01b038116600081815260066020526040808220805460ff19169055517f51085ddf9ebdded84b76e829eb58c4078e4b5bdf97d9a94723f336039da467919190a250565b33610cbe610b83565b6001600160a01b031614610ce45760405162461bcd60e51b815260040161073490611cb9565b6001600160a01b038116610d295760405162461bcd60e51b8152600401808060200182810382526026815260200180611dd06026913960400191505060405180910390fd5b6001600160a01b038116600081815260066020526040808220805460ff19166001179055517faab7954e9d246b167ef88aeddad35209ca2489d95a8aeb59e288d9b19fae5a549190a250565b3360009081526001602090815260408083206001600160a01b038616845290915281205482811015610df75760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610734565b610e0433858584036110fe565b5060019392505050565b6000610633338484611223565b33610e24610b83565b6001600160a01b031614610e4a5760405162461bcd60e51b815260040161073490611cb9565b6005805460ff60a01b1916600160a01b1790556040517fe5e5846f783279948f6ec5faad38318cde86fe5be7ea845ede56d62f16c3743490600090a1565b33610e91610b83565b6001600160a01b031614610eb75760405162461bcd60e51b815260040161073490611cb9565b6005805460ff60a01b191690556040517f212c6e1d3045c9581ef0adf2504dbb1d137f52f38162ccf77a16c69d14eba5c390600090a1565b33600090815260208190526040812054821115610f1e5760405162461bcd60e51b815260040161073490611c8b565b610f283383611433565b610f5c6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016338461156c565b506001919050565b6040516370a0823160e01b81526000907f00000000000000000000000000000000000000000000000000000000000000009083906001600160a01b038316906370a0823190610fb7903390600401611bbd565b60206040518083038186803b158015610fcf57600080fd5b505afa158015610fe3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110079190611b01565b10156110255760405162461bcd60e51b815260040161073490611c8b565b61103a6001600160a01b0382163330866115cf565b6110443384611607565b6007546106339033906001600160a01b03166000196110fe565b33611067610b83565b6001600160a01b03161461108d5760405162461bcd60e51b815260040161073490611cb9565b6001600160a01b0381166110f25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610734565b6110fb816113e1565b50565b6001600160a01b0383166111605760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610734565b6001600160a01b0382166111c15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610734565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166112875760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610734565b6001600160a01b0382166112e95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610734565b6001600160a01b038316600090815260208190526040902054818110156113615760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610734565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611398908490611cee565b92505081905550826001600160a01b0316846001600160a01b0316600080516020611df6833981519152846040516113d291815260200190565b60405180910390a35b50505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166114935760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610734565b6001600160a01b038216600090815260208190526040902054818110156115075760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610734565b6001600160a01b0383166000908152602081905260408120838303905560028054849290611536908490611d25565b90915550506040518281526000906001600160a01b03851690600080516020611df683398151915290602001611216565b505050565b6040516001600160a01b03831660248201526044810182905261156790849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526116d4565b6040516001600160a01b03808516602483015283166044820152606481018290526113db9085906323b872dd60e01b90608401611598565b6001600160a01b03821661165d5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610734565b806002600082825461166f9190611cee565b90915550506001600160a01b0382166000908152602081905260408120805483929061169c908490611cee565b90915550506040518181526001600160a01b03831690600090600080516020611df68339815191529060200160405180910390a35050565b6000611729826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166117a69092919063ffffffff16565b80519091501561156757808060200190518101906117479190611a2b565b6115675760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610734565b60606117b584846000856117bd565b949350505050565b60608247101561181e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610734565b843b61186c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610734565b600080866001600160a01b031685876040516118889190611ba1565b60006040518083038185875af1925050503d80600081146118c5576040519150601f19603f3d011682016040523d82523d6000602084013e6118ca565b606091505b50915091506118da8282866118e5565b979650505050505050565b606083156118f45750816109a9565b8251156119045782518084602001fd5b8160405162461bcd60e51b81526004016107349190611c58565b80356001600160a01b038116811461193557600080fd5b919050565b60006020828403121561194b578081fd5b6109a98261191e565b60008060408385031215611966578081fd5b61196f8361191e565b915061197d6020840161191e565b90509250929050565b60008060006060848603121561199a578081fd5b6119a38461191e565b92506119b16020850161191e565b9150604084013590509250925092565b600080604083850312156119d3578182fd5b6119dc8361191e565b946020939093013593505050565b600080600080600060a08688031215611a01578081fd5b611a0a8661191e565b97602087013597506040870135966060810135965060800135945092505050565b600060208284031215611a3c578081fd5b815180151581146109a9578182fd5b600060208284031215611a5c578081fd5b815167ffffffffffffffff80821115611a73578283fd5b818401915084601f830112611a86578283fd5b815181811115611a9857611a98611db9565b604051601f8201601f19908116603f01168101908382118183101715611ac057611ac0611db9565b81604052828152876020848701011115611ad8578586fd5b6118da836020830160208801611d3c565b600060208284031215611afa578081fd5b5035919050565b600060208284031215611b12578081fd5b5051919050565b600080600080600060808688031215611b30578081fd5b853594506020860135935060408601359250606086013567ffffffffffffffff80821115611b5c578283fd5b818801915088601f830112611b6f578283fd5b813581811115611b7d578384fd5b896020828501011115611b8e578384fd5b9699959850939650602001949392505050565b60008251611bb3818460208701611d3c565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0388811682528716602082015260408101869052606081018590526080810184905260c060a0820181905281018290526000828460e084013781830160e090810191909152601f909201601f191601019695505050505050565b6001600160a01b0394909416845260208401929092526040830152606082015260800190565b6020815260008251806020840152611c77816040850160208701611d3c565b601f01601f19169190910160400192915050565b602080825260149082015273496e73756666696369656e742062616c616e636560601b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115611d0157611d01611da3565b500190565b6000816000190483118215151615611d2057611d20611da3565b500290565b600082821015611d3757611d37611da3565b500390565b60005b83811015611d57578181015183820152602001611d3f565b838111156113db5750506000910152565b600181811c90821680611d7c57607f821691505b60208210811415611d9d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfe57686974656c69737461626c653a206163636f756e742063616e206e6f74206265207a65726fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220799b8949f157540e813374f2cfbadbc326bdc427df8ca576a5c8e06cba836a4964736f6c6343000804003357686974656c69737461626c653a206163636f756e742063616e206e6f74206265207a65726f",
  "deployedBytecode": "0x60806040526004361061018d5760003560e01c80638da5cb5b116100d7578063cdfb2b4e11610085578063cdfb2b4e1461045c578063d6b0f48414610471578063dd62ed3e14610486578063de0e9a3e146104cc578063ea598cb0146104ec578063f2fde38b1461050c578063f70222e11461052c578063f887ea401461056057600080fd5b80638da5cb5b1461038a5780638e5f5ad11461039f57806395d89b41146103c75780639a590427146103dc5780639b19251a146103fc578063a457c2d71461041c578063a9059cbb1461043c57600080fd5b8063313ce5671161013f578063313ce567146102815780633408e4701461029d57806339509351146102b05780633af32abf146102d057806351fb012d1461030957806370a082311461032a578063715018a61461036057806381ddc60d1461037557600080fd5b806306fdde0314610192578063095ea7b3146101bd57806309dfcd06146101ed578063116191b61461020057806318160ddd1461022d578063181655941461024c57806323b872dd14610261575b600080fd5b34801561019e57600080fd5b506101a7610594565b6040516101b49190611c58565b60405180910390f35b3480156101c957600080fd5b506101dd6101d83660046119c1565b610626565b60405190151581526020016101b4565b6101dd6101fb366004611b19565b61063c565b34801561020c57600080fd5b50600754610220906001600160a01b031681565b6040516101b49190611bbd565b34801561023957600080fd5b506002545b6040519081526020016101b4565b61025f61025a3660046119ea565b610705565b005b34801561026d57600080fd5b506101dd61027c366004611986565b610904565b34801561028d57600080fd5b50604051601281526020016101b4565b3480156102a957600080fd5b504661023e565b3480156102bc57600080fd5b506101dd6102cb3660046119c1565b6109b0565b3480156102dc57600080fd5b506101dd6102eb36600461193a565b6001600160a01b031660009081526006602052604090205460ff1690565b34801561031557600080fd5b506005546101dd90600160a01b900460ff1681565b34801561033657600080fd5b5061023e61034536600461193a565b6001600160a01b031660009081526020819052604090205490565b34801561036c57600080fd5b5061025f6109ec565b34801561038157600080fd5b506101dd610a27565b34801561039657600080fd5b50610220610b83565b3480156103ab57600080fd5b506103b4610b92565b60405161ffff90911681526020016101b4565b3480156103d357600080fd5b506101a7610be9565b3480156103e857600080fd5b5061025f6103f736600461193a565b610bf8565b34801561040857600080fd5b5061025f61041736600461193a565b610cb5565b34801561042857600080fd5b506101dd6104373660046119c1565b610d75565b34801561044857600080fd5b506101dd6104573660046119c1565b610e0e565b34801561046857600080fd5b5061025f610e1b565b34801561047d57600080fd5b5061025f610e88565b34801561049257600080fd5b5061023e6104a1366004611954565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3480156104d857600080fd5b506101dd6104e7366004611ae9565b610eef565b3480156104f857600080fd5b506101dd610507366004611ae9565b610f64565b34801561051857600080fd5b5061025f61052736600461193a565b61105e565b34801561053857600080fd5b506102207f000000000000000000000000000000000000000000000000000000000000000081565b34801561056c57600080fd5b506102207f000000000000000000000000000000000000000000000000000000000000000081565b6060600380546105a390611d68565b80601f01602080910402602001604051908101604052809291908181526020018280546105cf90611d68565b801561061c5780601f106105f15761010080835404028352916020019161061c565b820191906000526020600020905b8154815290600101906020018083116105ff57829003601f168201915b5050505050905090565b60006106333384846110fe565b50600192915050565b600061064786610f64565b5060405163d2ce7d6560e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063d2ce7d659034906106a290309033908c908c908c908c908c90600401611bd1565b6000604051808303818588803b1580156106bb57600080fd5b505af11580156106cf573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f191682016040526106f89190810190611a4b565b5060019695505050505050565b3361070e610b83565b6001600160a01b03161461073d5760405162461bcd60e51b815260040161073490611cb9565b60405180910390fd5b60078054600160a01b60ff60a01b19821681179092550460ff1660006107638385611d06565b61076d9087611cee565b9050600061077b8486611d06565b6107859087611cee565b90506107918183611cee565b34146107c95760405162461bcd60e51b81526020600482015260076024820152664f56455250415960c81b6044820152606401610734565b60075460405163f26bdead60e01b81526001600160a01b039091169063f26bdead908490610801908c908a908a908e90600401611c32565b6000604051808303818588803b15801561081a57600080fd5b505af115801561082e573d6000803e3d6000fd5b505060075460405163dd61456960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116955063dd614569945086935061088b9216908a908a908d90600401611c32565b6020604051808303818588803b1580156108a457600080fd5b505af11580156108b8573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108dd9190611b01565b505060078054921515600160a01b0260ff60a01b1990931692909217909155505050505050565b6000610911848484611223565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156109965760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610734565b6109a385338584036110fe565b60019150505b9392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916106339185906109e7908690611cee565b6110fe565b336109f5610b83565b6001600160a01b031614610a1b5760405162461bcd60e51b815260040161073490611cb9565b610a2560006113e1565b565b600033610a32610b83565b6001600160a01b031614610a585760405162461bcd60e51b815260040161073490611cb9565b6040516370a0823160e01b81527f0000000000000000000000000000000000000000000000000000000000000000906000906001600160a01b038316906370a0823190610aa9903090600401611bbd565b60206040518083038186803b158015610ac157600080fd5b505afa158015610ad5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af99190611b01565b60405163a9059cbb60e01b8152336004820152602481018290529091506001600160a01b0383169063a9059cbb90604401602060405180830381600087803b158015610b4457600080fd5b505af1158015610b58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7c9190611a2b565b9250505090565b6005546001600160a01b031690565b600754600090600160a01b900460ff16610be25760405162461bcd60e51b81526020600482015260116024820152701393d517d156141150d5115117d0d05313607a1b6044820152606401610734565b5061a4b190565b6060600480546105a390611d68565b33610c01610b83565b6001600160a01b031614610c275760405162461bcd60e51b815260040161073490611cb9565b6001600160a01b038116610c6c5760405162461bcd60e51b8152600401808060200182810382526026815260200180611dd06026913960400191505060405180910390fd5b6001600160a01b038116600081815260066020526040808220805460ff19169055517f51085ddf9ebdded84b76e829eb58c4078e4b5bdf97d9a94723f336039da467919190a250565b33610cbe610b83565b6001600160a01b031614610ce45760405162461bcd60e51b815260040161073490611cb9565b6001600160a01b038116610d295760405162461bcd60e51b8152600401808060200182810382526026815260200180611dd06026913960400191505060405180910390fd5b6001600160a01b038116600081815260066020526040808220805460ff19166001179055517faab7954e9d246b167ef88aeddad35209ca2489d95a8aeb59e288d9b19fae5a549190a250565b3360009081526001602090815260408083206001600160a01b038616845290915281205482811015610df75760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610734565b610e0433858584036110fe565b5060019392505050565b6000610633338484611223565b33610e24610b83565b6001600160a01b031614610e4a5760405162461bcd60e51b815260040161073490611cb9565b6005805460ff60a01b1916600160a01b1790556040517fe5e5846f783279948f6ec5faad38318cde86fe5be7ea845ede56d62f16c3743490600090a1565b33610e91610b83565b6001600160a01b031614610eb75760405162461bcd60e51b815260040161073490611cb9565b6005805460ff60a01b191690556040517f212c6e1d3045c9581ef0adf2504dbb1d137f52f38162ccf77a16c69d14eba5c390600090a1565b33600090815260208190526040812054821115610f1e5760405162461bcd60e51b815260040161073490611c8b565b610f283383611433565b610f5c6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016338461156c565b506001919050565b6040516370a0823160e01b81526000907f00000000000000000000000000000000000000000000000000000000000000009083906001600160a01b038316906370a0823190610fb7903390600401611bbd565b60206040518083038186803b158015610fcf57600080fd5b505afa158015610fe3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110079190611b01565b10156110255760405162461bcd60e51b815260040161073490611c8b565b61103a6001600160a01b0382163330866115cf565b6110443384611607565b6007546106339033906001600160a01b03166000196110fe565b33611067610b83565b6001600160a01b03161461108d5760405162461bcd60e51b815260040161073490611cb9565b6001600160a01b0381166110f25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610734565b6110fb816113e1565b50565b6001600160a01b0383166111605760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610734565b6001600160a01b0382166111c15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610734565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166112875760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610734565b6001600160a01b0382166112e95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610734565b6001600160a01b038316600090815260208190526040902054818110156113615760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610734565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611398908490611cee565b92505081905550826001600160a01b0316846001600160a01b0316600080516020611df6833981519152846040516113d291815260200190565b60405180910390a35b50505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166114935760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610734565b6001600160a01b038216600090815260208190526040902054818110156115075760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610734565b6001600160a01b0383166000908152602081905260408120838303905560028054849290611536908490611d25565b90915550506040518281526000906001600160a01b03851690600080516020611df683398151915290602001611216565b505050565b6040516001600160a01b03831660248201526044810182905261156790849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526116d4565b6040516001600160a01b03808516602483015283166044820152606481018290526113db9085906323b872dd60e01b90608401611598565b6001600160a01b03821661165d5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610734565b806002600082825461166f9190611cee565b90915550506001600160a01b0382166000908152602081905260408120805483929061169c908490611cee565b90915550506040518181526001600160a01b03831690600090600080516020611df68339815191529060200160405180910390a35050565b6000611729826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166117a69092919063ffffffff16565b80519091501561156757808060200190518101906117479190611a2b565b6115675760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610734565b60606117b584846000856117bd565b949350505050565b60608247101561181e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610734565b843b61186c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610734565b600080866001600160a01b031685876040516118889190611ba1565b60006040518083038185875af1925050503d80600081146118c5576040519150601f19603f3d011682016040523d82523d6000602084013e6118ca565b606091505b50915091506118da8282866118e5565b979650505050505050565b606083156118f45750816109a9565b8251156119045782518084602001fd5b8160405162461bcd60e51b81526004016107349190611c58565b80356001600160a01b038116811461193557600080fd5b919050565b60006020828403121561194b578081fd5b6109a98261191e565b60008060408385031215611966578081fd5b61196f8361191e565b915061197d6020840161191e565b90509250929050565b60008060006060848603121561199a578081fd5b6119a38461191e565b92506119b16020850161191e565b9150604084013590509250925092565b600080604083850312156119d3578182fd5b6119dc8361191e565b946020939093013593505050565b600080600080600060a08688031215611a01578081fd5b611a0a8661191e565b97602087013597506040870135966060810135965060800135945092505050565b600060208284031215611a3c578081fd5b815180151581146109a9578182fd5b600060208284031215611a5c578081fd5b815167ffffffffffffffff80821115611a73578283fd5b818401915084601f830112611a86578283fd5b815181811115611a9857611a98611db9565b604051601f8201601f19908116603f01168101908382118183101715611ac057611ac0611db9565b81604052828152876020848701011115611ad8578586fd5b6118da836020830160208801611d3c565b600060208284031215611afa578081fd5b5035919050565b600060208284031215611b12578081fd5b5051919050565b600080600080600060808688031215611b30578081fd5b853594506020860135935060408601359250606086013567ffffffffffffffff80821115611b5c578283fd5b818801915088601f830112611b6f578283fd5b813581811115611b7d578384fd5b896020828501011115611b8e578384fd5b9699959850939650602001949392505050565b60008251611bb3818460208701611d3c565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0388811682528716602082015260408101869052606081018590526080810184905260c060a0820181905281018290526000828460e084013781830160e090810191909152601f909201601f191601019695505050505050565b6001600160a01b0394909416845260208401929092526040830152606082015260800190565b6020815260008251806020840152611c77816040850160208701611d3c565b601f01601f19169190910160400192915050565b602080825260149082015273496e73756666696369656e742062616c616e636560601b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115611d0157611d01611da3565b500190565b6000816000190483118215151615611d2057611d20611da3565b500290565b600082821015611d3757611d37611da3565b500390565b60005b83811015611d57578181015183820152602001611d3f565b838111156113db5750506000910152565b600181811c90821680611d7c57607f821691505b60208210811415611d9d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfe57686974656c69737461626c653a206163636f756e742063616e206e6f74206265207a65726fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220799b8949f157540e813374f2cfbadbc326bdc427df8ca576a5c8e06cba836a4964736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "isWhitelisted(address)": {
        "details": "Checks if account is whitelisted",
        "params": {
          "_account": "The address to check"
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unwhitelist(address)": {
        "details": "Removes account from whitelist",
        "params": {
          "_account": "The address to remove from the whitelist"
        }
      },
      "whitelist(address)": {
        "details": "Adds account to whitelist",
        "params": {
          "_account": "The address to whitelist"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "disableWhitelist()": {
        "notice": "disable whitelist and allow transfers for everyone"
      },
      "enableWhitelist()": {
        "notice": "enable whitelist and only allow transfers from whitelisted addresses"
      },
      "transferDev()": {
        "notice": "Safety measure to transfer UNION to owner "
      },
      "unwrap(uint256)": {
        "notice": "Burn pegged token and return UNION"
      },
      "wrap(uint256)": {
        "notice": "Wrap UNION to create Arbitrum compatible token"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7776,
        "contract": "contracts/token/ArbUnionWrapper.sol:ArbUnionWrapper",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 7782,
        "contract": "contracts/token/ArbUnionWrapper.sol:ArbUnionWrapper",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 7784,
        "contract": "contracts/token/ArbUnionWrapper.sol:ArbUnionWrapper",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 7786,
        "contract": "contracts/token/ArbUnionWrapper.sol:ArbUnionWrapper",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 7788,
        "contract": "contracts/token/ArbUnionWrapper.sol:ArbUnionWrapper",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 3806,
        "contract": "contracts/token/ArbUnionWrapper.sol:ArbUnionWrapper",
        "label": "_owner",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 23752,
        "contract": "contracts/token/ArbUnionWrapper.sol:ArbUnionWrapper",
        "label": "whitelistEnabled",
        "offset": 20,
        "slot": "5",
        "type": "t_bool"
      },
      {
        "astId": 23756,
        "contract": "contracts/token/ArbUnionWrapper.sol:ArbUnionWrapper",
        "label": "_whitelisted",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 21992,
        "contract": "contracts/token/ArbUnionWrapper.sol:ArbUnionWrapper",
        "label": "gateway",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 21994,
        "contract": "contracts/token/ArbUnionWrapper.sol:ArbUnionWrapper",
        "label": "shouldRegisterGateway",
        "offset": 20,
        "slot": "7",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}