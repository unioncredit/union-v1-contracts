{
  "address": "0x9e21ca9e50823F90eC1604477884cab5491eF0AB",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_l2Gateway",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_l1TokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "Unwhitelisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "WhitelistDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "WhitelistEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "Whitelisted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "bridgeBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "bridgeMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "isWhitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l1Address",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l2Gateway",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "unwhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "whitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "whitelistEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xd4715a918c76a3dffd4a0787a8483393f797030eca61c3788619a0dae312bd85",
  "receipt": {
    "to": null,
    "from": "0x7a0C61EdD8b5c0c5C1437AEb571d7DDbF8022Be4",
    "contractAddress": "0x9e21ca9e50823F90eC1604477884cab5491eF0AB",
    "transactionIndex": 0,
    "gasUsed": "10830886",
    "logsBloom": "0x
    "blockHash": "0xa6977a92ac48df83c877ecd2f5b216be9852b8a7bb0a429a91ef220d7fe648b9",
    "transactionHash": "0xd4715a918c76a3dffd4a0787a8483393f797030eca61c3788619a0dae312bd85",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 9539848,
        "transactionHash": "0xd4715a918c76a3dffd4a0787a8483393f797030eca61c3788619a0dae312bd85",
        "address": "0x9e21ca9e50823F90eC1604477884cab5491eF0AB",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000007a0c61edd8b5c0c5c1437aeb571d7ddbf8022be4"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xa6977a92ac48df83c877ecd2f5b216be9852b8a7bb0a429a91ef220d7fe648b9"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 9539848,
        "transactionHash": "0xd4715a918c76a3dffd4a0787a8483393f797030eca61c3788619a0dae312bd85",
        "address": "0x9e21ca9e50823F90eC1604477884cab5491eF0AB",
        "topics": [
          "0xaab7954e9d246b167ef88aeddad35209ca2489d95a8aeb59e288d9b19fae5a54",
          "0x0000000000000000000000009b014455acc2fe90c52803849d0002aeec184a06"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0xa6977a92ac48df83c877ecd2f5b216be9852b8a7bb0a429a91ef220d7fe648b9"
      }
    ],
    "blockNumber": 9539848,
    "cumulativeGasUsed": "323566",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9b014455AcC2Fe90c52803849d0002aeEC184a06",
    "0xb5f13dcaa7a95EF3A087F1D22e848bD58b3076Ba"
  ],
  "solcInputHash": "dc2b0dfb667b258313b5e6ac5e5a477f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_l2Gateway\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l1TokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"Unwhitelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"WhitelistDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"WhitelistEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"Whitelisted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"bridgeBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"bridgeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l1Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2Gateway\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"unwhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whitelistEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"isWhitelisted(address)\":{\"details\":\"Checks if account is whitelisted\",\"params\":{\"_account\":\"The address to check\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unwhitelist(address)\":{\"details\":\"Removes account from whitelist\",\"params\":{\"_account\":\"The address to remove from the whitelist\"}},\"whitelist(address)\":{\"details\":\"Adds account to whitelist\",\"params\":{\"_account\":\"The address to whitelist\"}}},\"stateVariables\":{\"l1Address\":{\"return\":\"address of layer 1 token\",\"returns\":{\"_0\":\"address of layer 1 token\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"bridgeBurn(address,uint256)\":{\"notice\":\"should decrease token supply by amount, and should (probably) only be callable by the L1 bridge.\"},\"bridgeMint(address,uint256)\":{\"notice\":\"should increase token supply by amount, and should (probably) only be callable by the L1 bridge.\"},\"disableWhitelist()\":{\"notice\":\"disable whitelist and allow transfers for everyone\"},\"enableWhitelist()\":{\"notice\":\"enable whitelist and only allow transfers from whitelisted addresses\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ArbUnion.sol\":\"ArbUnion\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n\\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\\n        require(currentAllowance >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n        unchecked {\\n            _approve(sender, _msgSender(), currentAllowance - amount);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        uint256 senderBalance = _balances[sender];\\n        require(senderBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[sender] = senderBalance - amount;\\n        }\\n        _balances[recipient] += amount;\\n\\n        emit Transfer(sender, recipient, amount);\\n\\n        _afterTokenTransfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/interfaces/IArbToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\ninterface IArbToken {\\n    /**\\n     * @notice should increase token supply by amount, and should (probably) only be callable by the L1 bridge.\\n     */\\n    function bridgeMint(address _account, uint256 _amount) external;\\n\\n    /**\\n     * @notice should decrease token supply by amount, and should (probably) only be callable by the L1 bridge.\\n     */\\n    function bridgeBurn(address _account, uint256 _amount) external;\\n\\n    /**\\n     * @return address of layer 1 token\\n     */\\n    function l1Address() external view returns (address);\\n}\\n\",\"keccak256\":\"0xf3d743bb0e172003fd0832a945dcbb65604ccdc1c11bc6ce7ec600a8f48eef04\",\"license\":\"MIT\"},\"contracts/token/ArbUnion.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport {IArbToken} from \\\"../interfaces/IArbToken.sol\\\";\\nimport {Whitelistable} from \\\"./Whitelistable.sol\\\";\\n\\ncontract ArbUnion is ERC20, Whitelistable, IArbToken {\\n    address public immutable override l1Address;\\n    address public l2Gateway;\\n\\n    constructor(address _l2Gateway, address _l1TokenAddress) ERC20(\\\"Arbitrum UNION\\\", \\\"arbUNION\\\") {\\n        l2Gateway = _l2Gateway;\\n        l1Address = _l1TokenAddress;\\n        whitelistEnabled = false;\\n        whitelist(l2Gateway);\\n    }\\n\\n    function getChainId() public view returns (uint256 chainId) {\\n        assembly {\\n            chainId := chainid()\\n        }\\n    }\\n\\n    modifier onlyL2Gateway() {\\n        require(msg.sender == l2Gateway, \\\"NOT_GATEWAY\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @notice should increase token supply by amount, and should (probably) only be callable by the L1 bridge.\\n     */\\n    function bridgeMint(address account, uint256 amount) external override onlyL2Gateway {\\n        _mint(account, amount);\\n    }\\n\\n    /**\\n     * @notice should decrease token supply by amount, and should (probably) only be callable by the L1 bridge.\\n     */\\n    function bridgeBurn(address account, uint256 amount) external override onlyL2Gateway {\\n        _burn(account, amount);\\n    }\\n\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal override {\\n        super._beforeTokenTransfer(from, to, amount);\\n\\n        if (whitelistEnabled) {\\n            require(isWhitelisted(msg.sender) || to == address(0), \\\"Whitelistable: address not whitelisted\\\");\\n        }\\n    }\\n\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal override {\\n        super._afterTokenTransfer(from, to, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x6d0599c63365438c4d76f7b2420a74df6c0ff22521fcb8216b5764c115788704\",\"license\":\"MIT\"},\"contracts/token/Whitelistable.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.4;\\npragma abicoder v1;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nabstract contract Whitelistable is Ownable {\\n    // allow all transfers when set as false\\n    bool public whitelistEnabled;\\n\\n    // allow transfers when `whitelistEnabled` is set as true\\n    mapping(address => bool) internal _whitelisted;\\n\\n    event Whitelisted(address indexed _account);\\n    event Unwhitelisted(address indexed _account);\\n    event WhitelistEnabled();\\n    event WhitelistDisabled();\\n\\n    modifier checkWhitelist() {\\n        if (whitelistEnabled) {\\n            require(_whitelisted[msg.sender], \\\"Whitelistable: address not whitelisted\\\");\\n        }\\n        _;\\n    }\\n\\n    /**\\n     * @notice enable whitelist and only allow transfers from whitelisted addresses\\n     */\\n    function enableWhitelist() external onlyOwner {\\n        whitelistEnabled = true;\\n        emit WhitelistEnabled();\\n    }\\n\\n    /**\\n     * @notice disable whitelist and allow transfers for everyone\\n     */\\n    function disableWhitelist() external onlyOwner {\\n        whitelistEnabled = false;\\n        emit WhitelistDisabled();\\n    }\\n\\n    /**\\n     * @dev Checks if account is whitelisted\\n     * @param _account The address to check\\n     */\\n    function isWhitelisted(address _account) public view returns (bool) {\\n        return _whitelisted[_account];\\n    }\\n\\n    /**\\n     * @dev Adds account to whitelist\\n     * @param _account The address to whitelist\\n     */\\n    function whitelist(address _account) public onlyOwner {\\n        require(_account != address(0), \\\"Whitelistable: account can not be zero\\\");\\n        _whitelisted[_account] = true;\\n        emit Whitelisted(_account);\\n    }\\n\\n    /**\\n     * @dev Removes account from whitelist\\n     * @param _account The address to remove from the whitelist\\n     */\\n    function unwhitelist(address _account) external onlyOwner {\\n        require(_account != address(0), \\\"Whitelistable: account can not be zero\\\");\\n        _whitelisted[_account] = false;\\n        emit Unwhitelisted(_account);\\n    }\\n}\\n\",\"keccak256\":\"0x9eb966effb07fe68ef937ef9afff1ab8b2019337cf911425d522ea38686ccaaa\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620015c7380380620015c7833981016040819052620000349162000318565b604080518082018252600e81526d20b93134ba393ab6902aa724a7a760911b60208083019182528351808501909452600884526730b9312aa724a7a760c11b9084015281519192916200008a9160039162000255565b508051620000a090600490602084019062000255565b505050620000bd620000b76200010d60201b60201c565b62000111565b600780546001600160a01b0319166001600160a01b038416908117909155606082901b6001600160601b0319166080526005805460ff60a01b19169055620001059062000163565b50506200038c565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6005546001600160a01b03163314620001c25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b6001600160a01b038116620002095760405162461bcd60e51b8152600401808060200182810382526026815260200180620015a16026913960400191505060405180910390fd5b6001600160a01b038116600081815260066020526040808220805460ff19166001179055517faab7954e9d246b167ef88aeddad35209ca2489d95a8aeb59e288d9b19fae5a549190a250565b82805462000263906200034f565b90600052602060002090601f016020900481019282620002875760008555620002d2565b82601f10620002a257805160ff1916838001178555620002d2565b82800160010185558215620002d2579182015b82811115620002d2578251825591602001919060010190620002b5565b50620002e0929150620002e4565b5090565b5b80821115620002e05760008155600101620002e5565b80516001600160a01b03811681146200031357600080fd5b919050565b600080604083850312156200032b578182fd5b6200033683620002fb565b91506200034660208401620002fb565b90509250929050565b600181811c908216806200036457607f821691505b602082108114156200038657634e487b7160e01b600052602260045260246000fd5b50919050565b60805160601c6111f6620003ab600039600061031b01526111f66000f3fe608060405234801561001057600080fd5b50600436106101635760003560e01c80638c2a993e116100ce578063a457c2d711610087578063a457c2d7146102f0578063a9059cbb14610303578063c2eeeebd14610316578063cdfb2b4e1461033d578063d6b0f48414610345578063dd62ed3e1461034d578063f2fde38b1461038657600080fd5b80638c2a993e1461027c5780638da5cb5b1461028f5780638fa74a0e146102af57806395d89b41146102c25780639a590427146102ca5780639b19251a146102dd57600080fd5b8063395093511161012057806339509351146101e35780633af32abf146101f657806351fb012d1461022257806370a0823114610236578063715018a61461025f57806374f4f5471461026957600080fd5b806306fdde0314610168578063095ea7b31461018657806318160ddd146101a957806323b872dd146101bb578063313ce567146101ce5780633408e470146101dd575b600080fd5b610170610399565b60405161017d919061104d565b60405180910390f35b610199610194366004611024565b61042b565b604051901515815260200161017d565b6002545b60405190815260200161017d565b6101996101c9366004610fe9565b610441565b6040516012815260200161017d565b466101ad565b6101996101f1366004611024565b6104f0565b610199610204366004610f96565b6001600160a01b031660009081526006602052604090205460ff1690565b60055461019990600160a01b900460ff1681565b6101ad610244366004610f96565b6001600160a01b031660009081526020819052604090205490565b61026761052c565b005b610267610277366004611024565b610567565b61026761028a366004611024565b61059f565b6102976105d3565b6040516001600160a01b03909116815260200161017d565b600754610297906001600160a01b031681565b6101706105e2565b6102676102d8366004610f96565b6105f1565b6102676102eb366004610f96565b6106ae565b6101996102fe366004611024565b61076e565b610199610311366004611024565b610807565b6102977f000000000000000000000000000000000000000000000000000000000000000081565b610267610814565b610267610881565b6101ad61035b366004610fb7565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610267610394366004610f96565b6108e8565b6060600380546103a890611129565b80601f01602080910402602001604051908101604052809291908181526020018280546103d490611129565b80156104215780601f106103f657610100808354040283529160200191610421565b820191906000526020600020905b81548152906001019060200180831161040457829003601f168201915b5050505050905090565b6000610438338484610988565b50600192915050565b600061044e848484610aac565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104d85760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6104e58533858403610988565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916104389185906105279086906110fa565b610988565b336105356105d3565b6001600160a01b03161461055b5760405162461bcd60e51b81526004016104cf906110c5565b6105656000610c74565b565b6007546001600160a01b031633146105915760405162461bcd60e51b81526004016104cf906110a0565b61059b8282610cc6565b5050565b6007546001600160a01b031633146105c95760405162461bcd60e51b81526004016104cf906110a0565b61059b8282610e0f565b6005546001600160a01b031690565b6060600480546103a890611129565b336105fa6105d3565b6001600160a01b0316146106205760405162461bcd60e51b81526004016104cf906110c5565b6001600160a01b0381166106655760405162461bcd60e51b815260040180806020018281038252602681526020018061117b6026913960400191505060405180910390fd5b6001600160a01b038116600081815260066020526040808220805460ff19169055517f51085ddf9ebdded84b76e829eb58c4078e4b5bdf97d9a94723f336039da467919190a250565b336106b76105d3565b6001600160a01b0316146106dd5760405162461bcd60e51b81526004016104cf906110c5565b6001600160a01b0381166107225760405162461bcd60e51b815260040180806020018281038252602681526020018061117b6026913960400191505060405180910390fd5b6001600160a01b038116600081815260066020526040808220805460ff19166001179055517faab7954e9d246b167ef88aeddad35209ca2489d95a8aeb59e288d9b19fae5a549190a250565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156107f05760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104cf565b6107fd3385858403610988565b5060019392505050565b6000610438338484610aac565b3361081d6105d3565b6001600160a01b0316146108435760405162461bcd60e51b81526004016104cf906110c5565b6005805460ff60a01b1916600160a01b1790556040517fe5e5846f783279948f6ec5faad38318cde86fe5be7ea845ede56d62f16c3743490600090a1565b3361088a6105d3565b6001600160a01b0316146108b05760405162461bcd60e51b81526004016104cf906110c5565b6005805460ff60a01b191690556040517f212c6e1d3045c9581ef0adf2504dbb1d137f52f38162ccf77a16c69d14eba5c390600090a1565b336108f16105d3565b6001600160a01b0316146109175760405162461bcd60e51b81526004016104cf906110c5565b6001600160a01b03811661097c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104cf565b61098581610c74565b50565b6001600160a01b0383166109ea5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104cf565b6001600160a01b038216610a4b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104cf565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610b105760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104cf565b6001600160a01b038216610b725760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104cf565b610b7d838383610ee8565b6001600160a01b03831660009081526020819052604090205481811015610bf55760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104cf565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610c2c9084906110fa565b92505081905550826001600160a01b0316846001600160a01b03166000805160206111a183398151915284604051610c6691815260200190565b60405180910390a350505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610d265760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104cf565b610d3282600083610ee8565b6001600160a01b03821660009081526020819052604090205481811015610da65760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104cf565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610dd5908490611112565b90915550506040518281526000906001600160a01b038516906000805160206111a18339815191529060200160405180910390a35b505050565b6001600160a01b038216610e655760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104cf565b610e7160008383610ee8565b8060026000828254610e8391906110fa565b90915550506001600160a01b03821660009081526020819052604081208054839290610eb09084906110fa565b90915550506040518181526001600160a01b038316906000906000805160206111a18339815191529060200160405180910390a35050565b600554600160a01b900460ff1615610e0a573360009081526006602052604090205460ff1680610f1f57506001600160a01b038216155b610e0a5760405162461bcd60e51b815260206004820152602660248201527f57686974656c69737461626c653a2061646472657373206e6f742077686974656044820152651b1a5cdd195960d21b60648201526084016104cf565b80356001600160a01b0381168114610f9157600080fd5b919050565b600060208284031215610fa7578081fd5b610fb082610f7a565b9392505050565b60008060408385031215610fc9578081fd5b610fd283610f7a565b9150610fe060208401610f7a565b90509250929050565b600080600060608486031215610ffd578081fd5b61100684610f7a565b925061101460208501610f7a565b9150604084013590509250925092565b60008060408385031215611036578182fd5b61103f83610f7a565b946020939093013593505050565b6000602080835283518082850152825b818110156110795785810183015185820160400152820161105d565b8181111561108a5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252600b908201526a4e4f545f4741544557415960a81b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561110d5761110d611164565b500190565b60008282101561112457611124611164565b500390565b600181811c9082168061113d57607f821691505b6020821081141561115e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfe57686974656c69737461626c653a206163636f756e742063616e206e6f74206265207a65726fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220f37a4aaa6c2a79c098dca5b0a0e5f8f01abc639f6d332589cef33deca750d81d64736f6c6343000804003357686974656c69737461626c653a206163636f756e742063616e206e6f74206265207a65726f",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101635760003560e01c80638c2a993e116100ce578063a457c2d711610087578063a457c2d7146102f0578063a9059cbb14610303578063c2eeeebd14610316578063cdfb2b4e1461033d578063d6b0f48414610345578063dd62ed3e1461034d578063f2fde38b1461038657600080fd5b80638c2a993e1461027c5780638da5cb5b1461028f5780638fa74a0e146102af57806395d89b41146102c25780639a590427146102ca5780639b19251a146102dd57600080fd5b8063395093511161012057806339509351146101e35780633af32abf146101f657806351fb012d1461022257806370a0823114610236578063715018a61461025f57806374f4f5471461026957600080fd5b806306fdde0314610168578063095ea7b31461018657806318160ddd146101a957806323b872dd146101bb578063313ce567146101ce5780633408e470146101dd575b600080fd5b610170610399565b60405161017d919061104d565b60405180910390f35b610199610194366004611024565b61042b565b604051901515815260200161017d565b6002545b60405190815260200161017d565b6101996101c9366004610fe9565b610441565b6040516012815260200161017d565b466101ad565b6101996101f1366004611024565b6104f0565b610199610204366004610f96565b6001600160a01b031660009081526006602052604090205460ff1690565b60055461019990600160a01b900460ff1681565b6101ad610244366004610f96565b6001600160a01b031660009081526020819052604090205490565b61026761052c565b005b610267610277366004611024565b610567565b61026761028a366004611024565b61059f565b6102976105d3565b6040516001600160a01b03909116815260200161017d565b600754610297906001600160a01b031681565b6101706105e2565b6102676102d8366004610f96565b6105f1565b6102676102eb366004610f96565b6106ae565b6101996102fe366004611024565b61076e565b610199610311366004611024565b610807565b6102977f000000000000000000000000000000000000000000000000000000000000000081565b610267610814565b610267610881565b6101ad61035b366004610fb7565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610267610394366004610f96565b6108e8565b6060600380546103a890611129565b80601f01602080910402602001604051908101604052809291908181526020018280546103d490611129565b80156104215780601f106103f657610100808354040283529160200191610421565b820191906000526020600020905b81548152906001019060200180831161040457829003601f168201915b5050505050905090565b6000610438338484610988565b50600192915050565b600061044e848484610aac565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104d85760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6104e58533858403610988565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916104389185906105279086906110fa565b610988565b336105356105d3565b6001600160a01b03161461055b5760405162461bcd60e51b81526004016104cf906110c5565b6105656000610c74565b565b6007546001600160a01b031633146105915760405162461bcd60e51b81526004016104cf906110a0565b61059b8282610cc6565b5050565b6007546001600160a01b031633146105c95760405162461bcd60e51b81526004016104cf906110a0565b61059b8282610e0f565b6005546001600160a01b031690565b6060600480546103a890611129565b336105fa6105d3565b6001600160a01b0316146106205760405162461bcd60e51b81526004016104cf906110c5565b6001600160a01b0381166106655760405162461bcd60e51b815260040180806020018281038252602681526020018061117b6026913960400191505060405180910390fd5b6001600160a01b038116600081815260066020526040808220805460ff19169055517f51085ddf9ebdded84b76e829eb58c4078e4b5bdf97d9a94723f336039da467919190a250565b336106b76105d3565b6001600160a01b0316146106dd5760405162461bcd60e51b81526004016104cf906110c5565b6001600160a01b0381166107225760405162461bcd60e51b815260040180806020018281038252602681526020018061117b6026913960400191505060405180910390fd5b6001600160a01b038116600081815260066020526040808220805460ff19166001179055517faab7954e9d246b167ef88aeddad35209ca2489d95a8aeb59e288d9b19fae5a549190a250565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156107f05760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104cf565b6107fd3385858403610988565b5060019392505050565b6000610438338484610aac565b3361081d6105d3565b6001600160a01b0316146108435760405162461bcd60e51b81526004016104cf906110c5565b6005805460ff60a01b1916600160a01b1790556040517fe5e5846f783279948f6ec5faad38318cde86fe5be7ea845ede56d62f16c3743490600090a1565b3361088a6105d3565b6001600160a01b0316146108b05760405162461bcd60e51b81526004016104cf906110c5565b6005805460ff60a01b191690556040517f212c6e1d3045c9581ef0adf2504dbb1d137f52f38162ccf77a16c69d14eba5c390600090a1565b336108f16105d3565b6001600160a01b0316146109175760405162461bcd60e51b81526004016104cf906110c5565b6001600160a01b03811661097c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104cf565b61098581610c74565b50565b6001600160a01b0383166109ea5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104cf565b6001600160a01b038216610a4b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104cf565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610b105760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104cf565b6001600160a01b038216610b725760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104cf565b610b7d838383610ee8565b6001600160a01b03831660009081526020819052604090205481811015610bf55760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104cf565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610c2c9084906110fa565b92505081905550826001600160a01b0316846001600160a01b03166000805160206111a183398151915284604051610c6691815260200190565b60405180910390a350505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610d265760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104cf565b610d3282600083610ee8565b6001600160a01b03821660009081526020819052604090205481811015610da65760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104cf565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610dd5908490611112565b90915550506040518281526000906001600160a01b038516906000805160206111a18339815191529060200160405180910390a35b505050565b6001600160a01b038216610e655760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104cf565b610e7160008383610ee8565b8060026000828254610e8391906110fa565b90915550506001600160a01b03821660009081526020819052604081208054839290610eb09084906110fa565b90915550506040518181526001600160a01b038316906000906000805160206111a18339815191529060200160405180910390a35050565b600554600160a01b900460ff1615610e0a573360009081526006602052604090205460ff1680610f1f57506001600160a01b038216155b610e0a5760405162461bcd60e51b815260206004820152602660248201527f57686974656c69737461626c653a2061646472657373206e6f742077686974656044820152651b1a5cdd195960d21b60648201526084016104cf565b80356001600160a01b0381168114610f9157600080fd5b919050565b600060208284031215610fa7578081fd5b610fb082610f7a565b9392505050565b60008060408385031215610fc9578081fd5b610fd283610f7a565b9150610fe060208401610f7a565b90509250929050565b600080600060608486031215610ffd578081fd5b61100684610f7a565b925061101460208501610f7a565b9150604084013590509250925092565b60008060408385031215611036578182fd5b61103f83610f7a565b946020939093013593505050565b6000602080835283518082850152825b818110156110795785810183015185820160400152820161105d565b8181111561108a5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252600b908201526a4e4f545f4741544557415960a81b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561110d5761110d611164565b500190565b60008282101561112457611124611164565b500390565b600181811c9082168061113d57607f821691505b6020821081141561115e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfe57686974656c69737461626c653a206163636f756e742063616e206e6f74206265207a65726fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220f37a4aaa6c2a79c098dca5b0a0e5f8f01abc639f6d332589cef33deca750d81d64736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "isWhitelisted(address)": {
        "details": "Checks if account is whitelisted",
        "params": {
          "_account": "The address to check"
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unwhitelist(address)": {
        "details": "Removes account from whitelist",
        "params": {
          "_account": "The address to remove from the whitelist"
        }
      },
      "whitelist(address)": {
        "details": "Adds account to whitelist",
        "params": {
          "_account": "The address to whitelist"
        }
      }
    },
    "stateVariables": {
      "l1Address": {
        "return": "address of layer 1 token",
        "returns": {
          "_0": "address of layer 1 token"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "bridgeBurn(address,uint256)": {
        "notice": "should decrease token supply by amount, and should (probably) only be callable by the L1 bridge."
      },
      "bridgeMint(address,uint256)": {
        "notice": "should increase token supply by amount, and should (probably) only be callable by the L1 bridge."
      },
      "disableWhitelist()": {
        "notice": "disable whitelist and allow transfers for everyone"
      },
      "enableWhitelist()": {
        "notice": "enable whitelist and only allow transfers from whitelisted addresses"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7784,
        "contract": "contracts/token/ArbUnion.sol:ArbUnion",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 7790,
        "contract": "contracts/token/ArbUnion.sol:ArbUnion",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 7792,
        "contract": "contracts/token/ArbUnion.sol:ArbUnion",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 7794,
        "contract": "contracts/token/ArbUnion.sol:ArbUnion",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 7796,
        "contract": "contracts/token/ArbUnion.sol:ArbUnion",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 3806,
        "contract": "contracts/token/ArbUnion.sol:ArbUnion",
        "label": "_owner",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 23759,
        "contract": "contracts/token/ArbUnion.sol:ArbUnion",
        "label": "whitelistEnabled",
        "offset": 20,
        "slot": "5",
        "type": "t_bool"
      },
      {
        "astId": 23763,
        "contract": "contracts/token/ArbUnion.sol:ArbUnion",
        "label": "_whitelisted",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 21867,
        "contract": "contracts/token/ArbUnion.sol:ArbUnion",
        "label": "l2Gateway",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}