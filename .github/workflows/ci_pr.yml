name: coverage and slither

on: [pull_request]

jobs:
    coverage:
        name: Run coverage and tests
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: 14

            - name: Install Dependencies
              run: yarn install

            - name: Run coverage
              run: |
                  yarn lint
                  yarn coverage --testfiles test/unit/
                  yarn codecov
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
                  ALCHEMY_API_KEY: ${{ secrets.ALCHEMY_API_KEY }}
                  INFURA_ID: ${{ secrets.INFURA_ID }}
                  MNEMONIC_TEST: ${{ secrets.MNEMONIC_TEST }}

            - name: Run integration tests
              run: yarn test test/integration/*
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
                  ALCHEMY_API_KEY: ${{ secrets.ALCHEMY_API_KEY }}
                  INFURA_ID: ${{ secrets.INFURA_ID }}
                  MNEMONIC_TEST: ${{ secrets.MNEMONIC_TEST }}
                  TENDERLY_ACCESS_KEY: ${{ secrets.TENDERLY_ACCESS_KEY }}
                  TENDERLY_USER: ${{ secrets.TENDERLY_USER }}
                  TENDERLY_PROJECT: ${{ secrets.TENDERLY_PROJECT }}
    slither:
        name: Slither analyzer
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: 14
            - uses: actions/setup-python@v2
              with:
                  python-version: "3.x"

            - name: Install Dependencies
              run: npm install

            - name: Run Slither
              run: |
                  pip3 install slither-analyzer
                  npm run slither
              env:
                  ALCHEMY_API_KEY: ${{ secrets.ALCHEMY_API_KEY }}
                  INFURA_ID: ${{ secrets.INFURA_ID }}
                  MNEMONIC_TEST: ${{ secrets.MNEMONIC_TEST }}
    deployTest:
        name: Test deploy script
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: 14

            - name: Install Dependencies
              run: npm install

            - name: Run Deploy Script and Check Results
              run: |
                  npm run test:deploy
              env:
                  COINMARKETCAP_API_KEY: ${{ secrets.COINMARKETCAP_API_KEY }}
                  ALCHEMY_API_KEY: ${{ secrets.ALCHEMY_API_KEY }}
                  INFURA_ID: ${{ secrets.INFURA_ID }}
                  MNEMONIC_TEST: ${{ secrets.MNEMONIC_TEST }}
